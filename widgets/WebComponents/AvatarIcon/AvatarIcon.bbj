use ::WebKit/widgets/WebComponents/WebComponents.bbj::WebComponents
use ::WebKit/util/ClientUtil.bbj::ClientUtil

class public AvatarIcon extends WebComponents

    field public static BBjNumber ON_AVATAR_INITIAL_CLICK = 1234
    
    method private AvatarIcon()
    methodend

    method public AvatarIcon(BBjWindow wnd!)
        #super!.create(wnd!,wnd!.getAvailableControlID())
    methodend
    
    method public AvatarIcon(BBjWindow wnd!, BBjInt id!)
        #super!.create(wnd!,id!)
    methodend

   method public void redraw(Boolean f_init!)
        #super!.redraw(f_init!)
        
        if f_init!>0 then
            #htmlView!.setCallback(BBjAPI.ON_NATIVE_JAVASCRIPT, #this!,"onClickAvatarInitial")
            #htmlView!.setStyle("border","none")
        fi
        
        if #getText() <> null() then
            rem TODO: the height and the width shall entirely come from CSS
            txt$ = "<avatar-initial height=""50"" width=""50"" name="""+#getText()+"""></avatar-initial>"
            #htmlView!.setText(txt$)
        fi
    methodend    

    method public void onClickAvatarInitial(BBjNativeJavaScriptEvent ev!)
        ClientUtil.consoleLog("catched the webcomponent event from BBj :)")
        #fireEvent(#ON_AVATAR_INITIAL_CLICK, ev!)
    methodend


    method public void setText(String txt!)
        #super!.setText(txt!)
        #redraw(0)
    methodend
classend