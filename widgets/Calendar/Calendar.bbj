use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/widgets/Calendar/components/CalendarEntryWidget.bbj::CalendarEntryWidget
use ::WebKit/widgets/Calendar/CalendarEntry.bbj::CalendarEntry

use java.util.Date
use java.util.Calendar
use java.util.HashMap

class public Calendar extends BBjWidget
    
    field private BBjChildWindow window!
    field private BBjVector calendarEntries! = new BBjVector()
    field private BBjVector sortedCalendarEntries! = new BBjVector()
    field private BBjChildWindow calendarEntriesWidgetWrapper!
    field private BBjStaticText placeholder!
    field private BBjListButton filter!
    field private BBjChildWindow header!
    field private BBjStaticText widgetTitle!
    field private HashMap types!
    
    rem /**
    rem  @param BBjChildWindow wnd!
    rem  Constructor
    rem  */
    method public Calendar(BBjChildWindow wnd!)
        #this!(wnd!, wnd!.getAvailableControlID())
    methodend
   
    rem /**
    rem  @param BBjChildWindow wnd!
    rem  Constructor
    rem  */
    method public Calendar(BBjChildWindow wnd!, BBjInt id!)
        DynamicLoader.addLocalCSS("WebKit/widgets/Calendar/Calendar.css")
        #super!.create(wnd!, id!)
    methodend
    
    rem /**
    rem  @param Boolean init!
    rem  Redraws the UI when needed
    rem  */
    method public void redraw(Boolean init!)
        if !init! then
            #calendarEntriesWidgetWrapper!.destroy()
            #drawCalendarEntriesWrapper()
            methodret
        endif
        
        #types! = new HashMap()
        
        #window! = #getCanvas()
        
        #header! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())

        #widgetTitle! = #header!.addStaticText(#header!.getAvailableControlID(),0,0,0,0,"CALENDAR")
        
        #filter! = #header!.addListButton(#header!.getAvailableControlID(),0,0,0,0,"")
        #filter!.setCallback(#filter!.ON_LIST_SELECT, #this!, "filter")
        
        #filter!.addItem("All")
        #filter!.addItem("This Day")
        #filter!.addItem("This Week")
        #filter!.addItem("Next Week")
        #filter!.selectIndex(0)
        
        #setStyles()
        #drawCalendarEntriesWrapper()
    methodend
    
    rem /**
    rem  Set the Styles to make widget look like Figma
    rem  */
    method private void setStyles()
        #window!.setDockStyle("height", "100%")
        #window!.setDockStyle("width", "100%")

        #window!.setStyle("height", "100%")
        #window!.addPanelStyle("calendarPanelStyle")
        
        #header!.setDockStyle("height", "100%")
        #header!.setDockStyle("width", "100%")
        #header!.setDockStyle("padding", "0px 10px 10px 10px")
        #header!.addStyle("headerStyle")
        #header!.addPanelStyle("headerPanelStyle")
        
        #widgetTitle!.addStyle("widgetTitleStyle")
        #filter!.setAttribute("theme", "")
        
        #filter!.addStyle("filterStyle")
        #filter!.addStyle("dropDownLabelStyle")
    methodend

    rem /**
    rem  @param BBjVector vect!
    rem  Set Entries of the CalendarWidget
    rem  */
    method public void setEntries(BBjVector vect!)
        if vect! = null() then
            methodret
        endif

        if vect!.size() = 0 then
            methodret
        endif
    
        #calendarEntries! = CAST(BBjVector, vect!.clone())
        #sortedCalendarEntries! = CAST(BBjVector, #calendarEntries!.clone())
        
        if #calendarEntries!.size() <> 0 then
            #placeholder!.setStyle("display", "none")
        endif
        #redraw(0)
    methodend
    
    rem /**
    rem  @param BBjListSelectEvent event!
    rem  Filter the CalendarWidget Entries by different criteria
    rem  */
    method public void filter(BBjListSelectEvent event!)
        filter! = event!.getSelectedItem()
        #sortedCalendarEntries!.clear()
        
        declare Calendar cal!
        cal! = Calendar.getInstance()
        
        if filter! = "All" then
            #setEntries(#calendarEntries!)
            #redraw(0)
        endif
        
        if filter! = "This Day" then
            for i=0 to #calendarEntries!.size() - 1
                entryCalendar! = CAST(CalendarEntry, #calendarEntries!.getItem(i)).getStartCalendar()
                
                if entryCalendar!.get(Calendar.DATE) <> cal!.get(Calendar.DATE) then
                    continue
                endif
                if entryCalendar!.get(Calendar.WEEK_OF_YEAR) <> cal!.get(Calendar.WEEK_OF_YEAR) then
                    continue
                endif
                if entryCalendar!.get(Calendar.MONTH) <> cal!.get(Calendar.MONTH) then
                    continue
                endif
                if entryCalendar!.get(Calendar.YEAR) <> cal!.get(Calendar.YEAR) then
                    continue
                endif
                #sortedCalendarEntries!.add(#calendarEntries!.getItem(i))
            next i
            #redraw(0)
        endif
        
        if filter! = "This Week" then
            for i=0 to #calendarEntries!.size() - 1
                entryCalendar! = CAST(CalendarEntry, #calendarEntries!.getItem(i)).getStartCalendar()
                if entryCalendar!.get(Calendar.WEEK_OF_YEAR) <> cal!.get(Calendar.WEEK_OF_YEAR) then
                    continue
                endif
                if entryCalendar!.get(Calendar.MONTH) <> cal!.get(Calendar.MONTH) then
                    continue
                endif
                if entryCalendar!.get(Calendar.YEAR) <> cal!.get(Calendar.YEAR) then
                    continue
                endif
                #sortedCalendarEntries!.add(#calendarEntries!.getItem(i))
            next i
            #redraw(0)
        endif
        
        if filter! = "Next Week" then
            for i=0 to #calendarEntries!.size() - 1
                entryCalendar! = CAST(CalendarEntry, #calendarEntries!.getItem(i)).getStartCalendar()
                
                if entryCalendar!.get(Calendar.WEEK_OF_YEAR) - 1 = cal!.get(Calendar.WEEK_OF_YEAR) then
                    #sortedCalendarEntries!.add(#calendarEntries!.getItem(i))
                endif
                if entryCalendar!.get(Calendar.WEEK_OF_YEAR) <> cal!.get(Calendar.WEEK_OF_YEAR) then
                    continue
                endif
                if entryCalendar!.get(Calendar.MONTH) <> cal!.get(Calendar.MONTH) then
                    continue
                endif
                if entryCalendar!.get(Calendar.YEAR) <> cal!.get(Calendar.YEAR) then
                    continue
                endif
            next i
            #redraw(0)
        endif
        methodret
    methodend
    
    rem /**
    rem  @param BBjString value!
    rem  Add an Filter to the BBjListButton
    rem  */
    method public void addFilter(BBjString value!)
        #filter!.addItem(value!)
    methodend
    
    rem /**
    rem  @param BBjString value!
    rem  Select the filter from the BBjListButton
    rem  */
    method public void setFilter(BBjString value!)
        for i=0 to #filter!.getAllItems().size() - 1
            if #filter!.getItemAt(i) = value! then
                #filter!.selectIndex(i)
            endif
        next i
    methodend
    
    rem /**
    rem  @param BBjString value!
    rem  Delete a Filter from the BBjListButton
    rem  */
    method public void deleteFilter(BBjString value!)
        for i=0 to #filter!.getAllItems().size() - 1
            if #filter!.getItemAt(i) = value! then
                #filter!.removeItemAt(i)
            endif
        next i
    methodend
    
    rem /**
    rem  Set the Default Filters as BBjListButton Entries
    rem  */
    method public void setDefaultFilters()
        #filter!.removeAllItems()
        #filter!.add("This Day")
        #filter!.add("This Week")
        #filter!.add("Next Week")
    methodend
    
    rem /**
    rem  Redraw the CalendarEntriesWrapper to reload UI Components
    rem  */
    method private void drawCalendarEntriesWrapper()
        #calendarEntriesWidgetWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #calendarEntriesWidgetWrapper!.setDockStyle("height", "100%")
        #calendarEntriesWidgetWrapper!.setDockStyle("width", "100%")
        
        #calendarEntriesWidgetWrapper!.addStyle("calendarEntriesStyle")
        #calendarEntriesWidgetWrapper!.setStyle("height", "min-content")

        #calendarEntriesWidgetWrapper!.addPanelStyle("calendarEntriesPanelStyle")
        #calendarEntriesWidgetWrapper!.setPanelStyle("overflow", "auto")
        
        #placeholder! = #calendarEntriesWidgetWrapper!.addStaticText(#calendarEntriesWidgetWrapper!.getAvailableControlID(),0,0,0,0,"No content available to display.")
        #placeholder!.setStyle("justify-self", "center")
        #placeholder!.setStyle("align-self", "center")
        
        if #sortedCalendarEntries!.size() = 0 then
            #placeholder!.setStyle("display", "block")
            methodret
        endif
        
        if #sortedCalendarEntries!.size() <> 0 then
            #placeholder!.setStyle("display", "none")
        endif
        
        declare CalendarEntry entry!
        
        for i=0 to #sortedCalendarEntries!.size() - 1
            entry! = CAST(CalendarEntry, #sortedCalendarEntries!.get(i))
        
            widget! = new CalendarEntryWidget(#calendarEntriesWidgetWrapper!)
            widget!.setData(entry!, #types!)
        next i
    methodend
    
    rem /**
    rem  @param BBjString type!, BBjString color!
    rem  
    rem  */
    method public void addType(BBjString type!, BBjString color!)
        #types!.put(type!, color!)
    methodend
    
    rem /**
    rem  @param BBjString type!
    rem  */
    method public void removeType(BBjString type!)
        if !#types!.isEmpty() then
            #types!.remove(type!)
        endif
    methodend
    
    rem /**
    rem  @param BBjString type!, BBjString updatedName!
    rem  * 
    rem  */
    method public void updateTypeName(BBjString type!, BBjString updatedName!)
        #types!.put(updatedName!, #types!.get(type!))
    methodend
    
    rem /**
    rem  @param BBjString type!, BBjString color!
    rem  */
    method public void updateTypeColor(BBjString type!, BBjString color!)
        #types!.replace(type!, #types!.get(type!), color!)
    methodend
    
    rem /**
    rem  @return BBjVector
    rem  Returns the sortedCalendarEntries Vector
    rem  */
    method public BBjVector getCalendarEntries()
       methodret #sortedCalendarEntries!
    methodend
classend