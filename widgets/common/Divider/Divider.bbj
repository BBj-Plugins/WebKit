use ::BBjWidget/BBjWidget.bbj::BBjWidget

class public Divider extends BBjWidget 
    field private BBjChildWindow window!
    
    field private BBjNumber width! 
    
    field private BBjString color!
    
    field private BBjNumber height!
    
    field private BBjNumber marginTop!
    
    field private BBjNumber marginBottom!

    method public Divider(BBjWindow parent!)
        #window! = parent!.addChildWindow(parent!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
        #setCanvas(#window!)
        #redraw(1)
    methodend
    
    method public void redraw(Boolean init!)
        if !init! then
            #window!.setPanelStyle("height", str(#height!))
            #window!.setPanelStyle("width", str(#width!))
            #window!.setPanelStyle("background-color", #color!)
            #window!.setPanelStyle("margin-top", str(#marginTop!))
            #window!.setPanelStyle("margin-bottom", str(#marginBottom!))
        else 
            #window!.setPanelStyle("height", "1px")
            #window!.setPanelStyle("background-color", "black")
        endif
    methodend
    
    method public void setWidth(BBjNumber width!)
        #width! = width!
        #redraw(0)
    methodend
    
    method public void setHeight(BBjNumber height!)
        height! = height!
        #redraw(0)
    methodend
    
    method public void setColor(BBjString color!)
        #color! = color!
        #redraw(0)
    methodend
    
    method public void setMarginTop(BBjNumber marginTop!)
        #marginTop! = marginTop!
        #redraw(0)
    methodend
    
    method public void setMarginBottom(BBjNumber marginBottom!)
        #marginBottom! = marginBottom!
        #redraw(0)
    methodend
    
    method public void setMargin(BBjNumber margin!)
        #marginTop! = margin!
        #marginBottom! = margin!
        #redraw(0)
    methodend
classend