use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader

use ::WebKit/widgets/InputField/IValidator.bbj::IValidator
use ::WebKit/widgets/InputField/IValidator.bbj::RepeatPasswordValidator

use ::WebKit/framework/LoginDialog/LoginDialogWindow.bbj::LoginDialogWindow

class public InputField extends BBjWidget 

    field private BBjChildWindow window!
    field private IValidator validator!
    rem field private Boolean doValidate! = Boolean.TRUE
    
    field private BBjStaticText label!
    field private BBjEditBox inputField!
    field private BBjChildWindow subTextWnd!
    field private BBjStaticText subText!

    rem field private Boolean valid! = Boolean.FALSE
    
    rem field public static BBjNumber ON_SUFFIX_PRESSED = 520000
    
    rem to be deleted
    method public InputField(BBjChildWindow wnd!, BBjInt id!)
        DynamicLoader.addLocalCSS("WebKit/widgets/InputField/InputField.css")

        #super!.create(wnd!,id!)
    methodend

    method public InputField(BBjChildWindow wnd!, IValidator validator!)
         #this!(wnd!,wnd!.getAvailableControlID(), validator!)
    methodend
    
    method public InputField(BBjChildWindow wnd!, BBjInt id!, IValidator validator!)
        DynamicLoader.addLocalCSS("WebKit/widgets/InputField/InputField.css")

        #validator! = validator!
        #super!.create(wnd!,id!)
    methodend
    
    method public void redraw(Boolean init!)
        if init! then
            #window! = #getCanvas()
            #window!.addPanelStyle("inputFieldPanelStyle")

            #label! = #window!.addStaticText( #window!.getAvailableControlID(),0,0,0,0,"")
            #label!.addStyle("inputFieldLabelStyle")
 
            #subTextWnd! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #subTextWnd!.addStyle("inputFieldSubTextWindow")
            #subText! = #subTextWnd!.addStaticText(#window!.getAvailableControlID(),0,0,0,0,"")
            #subText!.addStyle("inputFieldSubTextStyle")
                
            #inputField! = #window!.addEditBox(#window!.getAvailableControlID(),0,0,0,0,"")
            rem if Boolean.TRUE then #inputField!.setFlag($0400$)
            #inputField!.addStyle("inputFieldStyle")
            #inputField!.addStyle("inputFieldStyleInputWrapper")
            #inputField!.addStyle("inputFieldStyleInput")
            #inputField!.setLeftMargin(0)

            #window!.setCallback(BBjAPI.ON_MOUSE_ENTER,#this!,"onHoverStart")
            #window!.setCallback(BBjAPI.ON_MOUSE_EXIT,#this!,"onHoverExit")
            #inputField!.setCallback(BBjAPI.ON_GAINED_FOCUS,#this!,"onFocusGained")
            #inputField!.setCallback(BBjAPI.ON_LOST_FOCUS,#this!,"onFocusLost")
            #inputField!.setCallback(BBjAPI.ON_EDIT_MODIFY,#this!,"onInputChange") 
            
            
        endif  
    methodend




    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem ||||||||||||| GETTERS & SETTERS ||||||||||||
    rem ||||||||||||||||||||||||||||||||||||||||||||

    rem method public void setDoValidate(Boolean doValidate!)
    rem     #doValidate! = doValidate!
    rem methodend

    method public IValidator getValidator()
        methodret #validator!
    methodend
    
    method public BBjEditBox getInputField()
        methodret #inputField! 
    methodend

    method public BBjString getText()
        methodret #inputField!.getText()
    methodend

    method public void setLabel(BBjString label!)
        #label!.setText(label!)
    methodend

    method public void setPlaceHolder(BBjString placeholder!)
        #inputField!.setPlaceholder(placeholder!)
    methodend

    rem can only be set once, is that okay? or set as an instance var that can be reset?
    method public void setSuffix(BBjString suffixPath!)    	
        suffixWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        suffixWrapper!.setDockStyle("grid-row-start","2")
        suffixWrapper!.setDockStyle("grid-column-start","2")
        suffixWrapper!.setDockStyle("height","fit-content")
        suffixWrapper!.setDockStyle("width","fit-content")
        suffixWrapper!.setDockStyle("align-self","end")
        suffixWrapper!.setDockStyle("justify-self","end")
           
        suffixWrapper!.addImageCtrl(suffixWrapper!.getAvailableControlID(),0,0,0,0,suffixPath!)

        rem suffixWrapper!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onIconPressed")
    methodend

    method public void setSubText(BBjString subText!)
        #subText!.setText(subText!)
    methodend



    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem |||||||||||||||| CALLBACKS |||||||||||||||||
    rem ||||||||||||||||||||||||||||||||||||||||||||

    method public void onHoverStart(BBjMouseEnterEvent event!)
        #label!.addStyle("hover")
    methodend
    
    method public void onHoverExit(BBjMouseExitEvent event!)
        #label!.removeStyle("hover")
    methodend

    method public void onFocusGained(BBjGainedFocusEvent event!)
        #label!.addStyle("focus")
        #inputField!.addStyle("focus")   
    methodend
    
    method public void onFocusLost(BBjLostFocusEvent event!)
        #label!.removeStyle("focus")
        #inputField!.removeStyle("focus")
    methodend

    method public void onInputChange(BBjEditModifyEvent event!)
        if #validator! <> null() then
            #subText!.setText(#validator!.validate(event!.getText()))
        endif
    methodend   

    method public void onIconPressed(BBjMouseDownEvent event!)
        #fireEvent(#ON_SUFFIX_PRESSED,#isPasswordField!)
    methodend



    rem method public InputField(BBjChildWindow wnd!, BBjInt id!, BBjString suffixIcon!)
    rem     DynamicLoader.addLocalCSS("WebKit/widgets/InputField/InputField.css")

    rem     #suffixIconPath! = suffixIcon!
    rem     #super!.create(wnd!,id!)
    rem methodend 
    
    rem method public InputField(BBjChildWindow wnd!, BBjInt id!, Boolean isPasswordField!)
    rem     DynamicLoader.addLocalCSS("WebKit/widgets/InputField/InputField.css")

    rem     #isPasswordField! = isPasswordField!
    rem     #super!.create(wnd!,id!)
    rem methodend
    
    rem method public InputField(BBjChildWindow wnd!, BBjInt id!, BBjString suffixIcon!, Boolean isPasswordField!)
    rem     DynamicLoader.addLocalCSS("WebKit/widgets/InputField/InputField.css")

    rem     #isPasswordField! = isPasswordField!
    rem     #suffixIconPath! = suffixIcon!
    rem     #super!.create(wnd!,id!)
    rem methodend

    rem |||||||| GETTERS & SETTERS ||||||
    
rem     method public BBjStaticText getLabel()
rem         methodret #label!
rem     methodend

rem     method public void setLabel(BBjString label!)
rem         #label!.setText(label!)
rem     methodend

rem     method public BBjInputE getInputField()
rem         methodret #inputField!
rem     methodend

rem     method public BBjEditBox getPasswordField()
rem         methodret #passwordField!
rem     methodend

rem     method public String getText()
rem         if #passwordField! = null() then
rem             methodret #inputField!.getText()
rem         else 
rem             methodret #passwordField!.getText()
rem         endif
rem     methodend

rem     method public void setText(BBjString text!)
rem         if #isPasswordField! then 
rem             #passwordField!.setText(text!)
rem         else
rem             #inputField!.setText(text!)
rem         endif  
rem     methodend

rem     method public BBjStaticText getSubText()
rem         methodret #subText!
rem     methodend

rem     method public void setSubText(BBjString text$)
rem         #subText!.setText(text$)    
rem     methodend

rem     method public void setPlaceHolder(BBjString placeholder!)
rem         if #isPasswordField! then 
rem             #passwordField!.setPlaceholder(placeholder!)
rem         else 
rem             #inputField!.setPlaceholder(placeholder!)
rem         endif    
rem     methodend

rem     method public void setPasswordVisible(Boolean visible!)
rem         if #passwordField! = null() then methodret
rem         #passwordField!.setPasswordVisible(visible!)
rem     methodend

rem     method public Boolean isPasswordVisible()
rem         if #passwordField! = null() then methodret 0
rem         methodret #passwordField!.isPasswordVisible()
rem     methodend

rem     method public void setSuffixIcon(BBjString suffixIcon!)
rem         #suffixIconPath! = suffixIcon!
rem         #createSuffixIcon()
rem     methodend

rem     method public Boolean getIsPasswordField()
rem     methodret #isPasswordField! 
rem methodend

rem     method public void setPasswordField(Boolean enabled!)
rem         #isPasswordField! = 1
rem         #createPasswordField(0)
rem     methodend

rem     method public Boolean getValid()
rem         methodret #valid! 
rem     methodend
    
rem     method public void setValid(Boolean valid!)
rem         #valid! = valid! 
rem     methodend

    rem ||||||||| DRAW ||||||||||
    rem method public void clearStyle()
    rem #subText!.setText("")
    rem     #label!.removeStyle("hover")
    rem     #label!.removeStyle("focus")
    rem     #label!.removeStyle("error")
    rem     if #isPasswordField! then
    rem         #passwordField!.removeStyle("focus")
    rem         #passwordField!.removeStyle("error")
    rem     else
    rem         #inputField!.removeStyle("focus")
    rem         #inputField!.removeStyle("error")
    rem     endif
    rem methodend


    

    



    rem ||||||| CALLBACKS ||||||||

    


    rem method public void onError()
    rem     #label!.setStyle("color","var(--webkit-primary)")
    rem     if #isPasswordField! then
    rem         #passwordField!.addStyle("error")
    rem     else
    rem         #inputField!.addStyle("error")
    rem     endif
    rem methodend




    rem method public void onIconPressed(BBjMouseDownEvent event!)
    rem     #fireEvent(#ON_SUFFIX_PRESSED,#isPasswordField!)
    rem methodend

classend
