use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::WebKit/widgets/common/Divider/Divider.bbj::Divider
use ::WebKit/widgets/DashboardContainer/DashboardContainer.bbj::DashboardWidget

use ::WebKit/widgets/Drawer/components/DrawerHeader/DrawerHeader.bbj::DrawerHeader
use ::WebKit/widgets/Drawer/components/DrawerFooter/DrawerFooter.bbj::DrawerFooter
use ::WebKit/widgets/Drawer/components/DrawerMenuTile/DrawerMenuTile.bbj::DrawerMenuTile
use ::WebKit/framework/PortalFrame/PortalFrame.bbj::PortalFrame

use ::WebKit/model/DrawerMenuTileEntry.bbj::DrawerMenuTileEntry
use ::WebKit/model/DrawerModel.bbj::DrawerModel

use ::WebKit/model/Menu.bbj::MenuItem
use ::WebKit/model/Menu.bbj::Menu

use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.DataField


use java.util.HashMap

class public Drawer extends BBjWidget 
    
    field protected BBjChildWindow window!
    
    field protected BBjChildWindow shadowWindow!

    field protected Boolean open! = 0
    
    field private BBjVector tiles! = new BBjVector()
    
    field private BBjChildWindow tilesWrapper!
    
    field private BBjChildWindow optionalControl!
    
    field private BBjChildWindow customContainer!
    
    field protected DrawerModel drawerDataModel! 
    
    field public HashMap MenuItemTiles! = new HashMap()
    
    field public Menu menu!
    

    field public static BBjNumber ON_DRAWER_TILE_PRESSED = 122 

    field public static BBjNumber ON_DRAWER_FOOTER_TILE_PRESSED = 132 

    field public static BBjNumber ON_DRAWER_HEADER_TILE_PRESSED = 142 

    field public static BBjNumber ON_DRAWER_STATE_CHANGED = 1444

    field public static BBjNumber ON_LOGOUT = 14441
    
    method public Drawer(BBjWindow parent!, DrawerModel dataModel!,Menu menu!)
        rem parent!.setCallback(BBjAPI().ON_RESIZE, #this!, "onResizeScreen")
        DynamicLoader.addLocalCSS("WebKit/widgets/Drawer/Drawer.css")
        #window! = parent!.addChildWindow(parent!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
        #window!.addStyle("drawerStyle") 
        #window!.addStyle("drawerShow")       
        #window!.addStyle("drawerOpen")
        #window!.addPanelStyle("drawerPanelStyle")
        #window!.addPanelStyle("drawerAnimationOpen")
        #window!.addPanelStyle("drawerAnimationClose")
        
        #menu! = menu!
        
        #shadowWindow! = parent!.addChildWindow(parent!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
        #shadowWindow!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onShadowTapped")
        #shadowWindow!.addPanelStyle("drawerMobileShadowPanelStyle")
        #shadowWindow!.addStyle("drawerShadow")
        #drawerDataModel! = dataModel!
        #tiles! = dataModel!.getMenuTiles()
        #setCanvas(#window!)
      
        #redraw(1)
    methodend
    
    method public void redraw(Boolean init!)
        declare DrawerHeader header!
        declare DashboardWidget dashboard!
        declare Divider topDivider!
        declare Divider bottomDivider!
        
        declare DrawerFooter footer!
        declare BBjChildWindow footerWrapper!
        declare BBjString templateRows!
       
       rem 12px drawertile space
       
       
       
        if init!
            
            #open! = 1
            #buildHeader()
            
            #customContainer! = #window!.addChildWindow(#window!.getAvailableControlID(), 0, 0, 0, 0, "", $00108800$, BBjAPI().getSysGui().getAvailableContext())
            #renderCustomContainer(#customContainer!)
            
            topDivider! = new Divider(#window!)
            topDivider!.setColor("#DDE0E1")
            
            #tilesWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            #tilesWrapper!.addPanelStyle("drawerTilesWrapper")
           
            
            footerWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            footerWrapper!.addPanelStyle("drawerFooterWrapper")
            
            bottomDivider! = new Divider(footerWrapper!)
            bottomDivider!.setColor("#DDE0E1")
            bottomDivider!.addPanelStyle("bottomDivider")

            footer! = new DrawerFooter(footerWrapper!,#window!,#drawerDataModel!)
            footer!.setDockStyle("align-self","center")
            footer!.setCallback(DrawerFooter.getON_LOGOUT(), #this!, "onLogout")
            footer!.setCallback(DrawerFooter.ON_FOOTER_TILE_PRESSED, #this!, "onFooterMenuItemClick")
            
            #buildDrawerTiles(#tiles!,#tilesWrapper!)
            #disableFooter(footerWrapper!)
        endif
    methodend
    
    method public void disableFooter(BBjWindow footerWrapper!)
    methodend
    
    method public void buildHeader()
            header! = new DrawerHeader(#window!, #drawerDataModel!)
            header!.setCallback(DrawerHeader.ON_DRAWER_CLOSE_ICON_PUSH, #this!,"closeDrawer")
            header!.setCallback(DrawerHeader.ON_DRAWER_OPEN_ICON_PUSH, #this!,"openDrawer")

            header!.setCallback(DrawerHeader.ON_DRAWER_HEADER_TILE_PRESSED, #this!, "onHeaderMenuItemClick")
    methodend
    method public void buildDrawerTiles(BBjVector tiles!, BBjWindow tilesWrapper!)
            declare MenuItem entry!
            declare BBjChildWindow spacer!
            templateRows! = "40px"
            it! = tiles!.iterator()
            while it!.hasNext()
                menuItem! = cast(MenuItem,it!.next())
                tile! = new DrawerMenuTile(tilesWrapper!,menuItem!.getNodeId(),menuitem!.getIcon(), menuitem!.getCaption())
                tile!.setCallback(DrawerMenuTile.ON_DRAWER_TILE_PRESSED, #this!, "onMenuItemClick")
                templateRows! = templateRows! + " 48px" 
                if i <> tiles!.size() -1 then 
                    templateRows! = templateRows! + " 12px"
                    spacer! = tilesWrapper!.addChildWindow(tilesWrapper!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
                    spacer!.setDockStyle("height","12px")
                endif
            wend
            tilesWrapper!.setPanelStyle("grid-template-rows",templateRows!)
    methodend
    
    method public BBjChildWindow getOptionalControlAboveTiles()
        
        if #optionalControl! = null() then
            #optionalControl! = #tilesWrapper!.addChildWindow(#tilesWrapper!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
        endif
        methodret #optionalControl!
    methodend
    
    method public void onShadowTapped(BBjMouseDownEvent event!)
        #shadowWindow!.removeStyle("drawerShadow")
        #closeDrawer(null())
        #fireEvent(#ON_DRAWER_STATE_CHANGED, #open!)
    methodend  
    
    method public void closeDrawer(BBjCustomEvent event!)
        #window!.addStyle("drawerClosed")

        #window!.removeStyle("drawerOpen")
        #shadowWindow!.removeStyle("drawerShadow")
        #open! = !#open!
        #fireEvent(#ON_DRAWER_STATE_CHANGED, 0)
    methodend

    method public void onMenuItemClick(BBjCustomEvent event!)
        #fireEvent(#ON_DRAWER_TILE_PRESSED, event!.getObject())
    methodend

    method public void onFooterMenuItemClick(BBjCustomEvent ev!)
        #fireEvent(#ON_DRAWER_FOOTER_TILE_PRESSED, ev!.getObject())
    methodend

    method public void onHeaderMenuItemClick(BBjCustomEvent ev!)
        #fireEvent(#ON_DRAWER_HEADER_TILE_PRESSED, ev!.getObject())
    methodend
    
    method public void openDrawer(BBjCustomEvent event!)
        #window!.addStyle("drawerOpen")
        #window!.removeStyle("drawerClosed")
        #open! = !#open!
        #fireEvent(#ON_DRAWER_STATE_CHANGED, 1)
    methodend

    method public Boolean isOpen()
        methodret #open!
    methodend
    
    method public void onLogout(BBjCustomEvent ev!)
       #fireEvent(#ON_LOGOUT, "") 
    methodend
    
    
    rem /**
    rem  * renderCustomContainer
    rem  * override this method if you want to display a custom widget or stuff
    rem  * over the main menu tiles
    rem  */
    method protected void renderCustomContainer( BBjChildWindow customContainer!)
                
    methodend
    
classend