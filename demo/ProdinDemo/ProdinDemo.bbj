
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/demo/ProdinDemo/ProdinDemo.bbj::ProdinDemo
use ::WebKit/framework/LoginDialog/SampleAuthProvider.bbj::SampleAuthProvider

if INFO(3,6)<>"6" then call "WebKit/util/deploy.bbj",pgm(-1)

DynamicLoader.init()
DynamicLoader.addStyleURL("https://fonts.googleapis.com/icon?family=Material+Icons")
DynamicLoader.addLocalCSS("WebKit/demo/ProdinDemo/ProdinDemo.css")

bbjutils! = new ::BBUtils.bbj::BBUtils()

bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_logo.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/Lato-Regular.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/Lato-Bold.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/feather-icons.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_desktop.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_tablet.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_phone.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawer_icon_open.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawer_icon_close.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawerAvatar.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_logo_small.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/baron.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/abstergo.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/binford.png","prodinRes")

declare ProdinDemo prodin!

prodin! = new ProdinDemo()

prodin!.show()

release
rem --------------------------------------------------



use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/widgets/Drawer/Drawer.bbj::Drawer
use ::WebKit/widgets/TilesTextHeader/TilesTextHeader.bbj::TilesTextHeader

use ::WebKit/model/DrawerMenuTileEntry.bbj::DrawerMenuTileEntry
use ::WebKit/model/DrawerModel.bbj::DrawerModel

class public ProdinDemo 

    field private BBjSysGui sysGui!
    
    field private BBjTopLevelWindow mainWindow!
    
    field private Drawer drawer!
    
    field private BBjChildWindow loginWrapper!

    method public ProdinDemo()
    methodend
    
    method public void show()
        if #mainWindow! = null() then   
            declare LoginDialog login!
            login! = new LoginDialog( new SampleAuthProvider())
            rem login!.setCallback(LoginDialog.ON_LOGIN,#this!,"onLogin")
            login!.setDockStyle("justify-self","center")
            login!.setDockStyle("align-self","center")
            login!.setLogo("WebKit/demo/ProdinDemo/assets/prodin_logo.png")

            login!.setAllowRemember(Boolean.TRUE)

            if !login!.doModal2() then
                a=msgbox("ERROR",0,"Error while logging in")
                release
            fi
            #initializeDrawer()
        endif
        process_events
    methodend
    
    method private void initializeDrawer()
        declare BBjVector menuTiles!
        declare TilesTextHeader header!

        declare DrawerModel drawerDataModel!
        drawerDataModel! = new DrawerModel()
        drawerDataModel!.setLogoUrl("WebKit/demo/ProdinDemo/assets/prodin_logo.png")
        drawerDataModel!.setLogoSmallUrl("WebKit/demo/ProdinDemo/assets/prodin_logo_small.png")
        drawerDataModel!.setTilesTextHeader("Browse!")
        drawerDataModel!.setDrawerOpenIcon("url(/files/prodinRes/drawer_icon_open.png)")
        drawerDataModel!.setDrawerCloseIcon("url(/files/prodinRes/drawer_icon_close.png)")

        drawerDataModel!.setAvatarUrl("/files/prodinRes/drawerAvatar.png")
        menuTiles! = new BBjVector()
        menuTiles!.add(new DrawerMenuTileEntry(1,"Customers","WebKit/demo/ProdinDemo/assets/users.png"))
        menuTiles!.add(new DrawerMenuTileEntry(2,"Tasks","WebKit/demo/ProdinDemo/assets/tasks.png"))
        menuTiles!.add(new DrawerMenuTileEntry(3,"Quotations","WebKit/demo/ProdinDemo/assets/proposals.png"))
        menuTiles!.add(new DrawerMenuTileEntry(4,"Products","WebKit/demo/ProdinDemo/assets/shopping-cart.png"))
        menuTiles!.add(new DrawerMenuTileEntry(5,"Customers","WebKit/demo/ProdinDemo/assets/users.png"))
        menuTiles!.add(new DrawerMenuTileEntry(6,"Tasks","WebKit/demo/ProdinDemo/assets/tasks.png"))
        menuTiles!.add(new DrawerMenuTileEntry(7,"Quotations","WebKit/demo/ProdinDemo/assets/proposals.png"))
        menuTiles!.add(new DrawerMenuTileEntry(8,"Products","WebKit/demo/ProdinDemo/assets/shopping-cart.png"))
    
        drawerDataModel!.setMenuTiles(menuTiles!)
        #drawer! = new Drawer(#mainWindow!, drawerDataModel!)
        
        header! = new TilesTextHeader(#drawer!.getOptionalControlAboveTiles(), drawerDataModel!.getTilesTextHeader())
        
        header!.setDockStyle("grid-row-start","1")
        header!.setDockStyle("margin-bottom","8px")
        header!.setDockStyle("margin-top","24px")
        header!.setDockStyle("margin-left","40px")
        header!.addTextStyle("drawerTilesTextHeaderStyle")
        header!.setTextStyle("display","block")
    methodend
    
    method public void onLogin(BBjCustomEvent event!)
        #loginWrapper!.destroy()
        #initializeDrawer()
    methodend
classend
