
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/demo/ProdinDemo/ProdinDemo.bbj::ProdinDemo

if INFO(3,6)<>"6" then call "WebKit/util/deploy.bbj",pgm(-1)

DynamicLoader.init()
DynamicLoader.addStyleURL("https://fonts.googleapis.com/icon?family=Material+Icons")
DynamicLoader.addLocalCSS("WebKit/demo/ProdinDemo/ProdinDemo.css")

bbjutils! = new ::BBUtils.bbj::BBUtils()

bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_logo.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/Lato-Regular.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/Lato-Bold.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/fonts/feather-icons.ttf","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_desktop.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_tablet.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_login_background_phone.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawer_icon_open.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawer_icon_close.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/drawerAvatar.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/prodin_logo_small.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/baron.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/abstergo.png","prodinRes")
bbjutils!.copyFileToWebServer("WebKit/demo/ProdinDemo/assets/binford.png","prodinRes")

declare ProdinDemo prodin!

prodin! = new ProdinDemo()

prodin!.show()

release
rem --------------------------------------------------



use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/widgets/Drawer/Drawer.bbj::Drawer
use ::WebKit/widgets/TilesTextHeader/TilesTextHeader.bbj::TilesTextHeader

use ::WebKit/model/DrawerMenuTileEntry.bbj::DrawerMenuTileEntry
use ::WebKit/model/DrawerModel.bbj::DrawerModel

use ::WebKit/widgets/DashboardHeader/DashboardHeader.bbj::DashboardHeader
use ::WebKit/widgets/DashboardHeader/DashboardHeaderEntry.bbj::DashboardHeaderEntry

class public ProdinDemo 

    field private BBjSysGui sysGui!
    
    field private BBjTopLevelWindow mainWindow!
    
    field private Drawer drawer!
    
    field private BBjChildWindow loginWrapper!
    
    
    rem for testing
    field private DashboardHeader dashboardHeader!

    method public ProdinDemo()
    methodend
    
    method public void show()
        if #mainWindow! = null() then
            #sysGui! = BBjAPI().openSysGui("X0")
        
            #mainWindow! = #sysGui!.addWindow(#sysGui!.getAvailableContext(),25,25,1200,750,"Prodin Demo",$01101083$)
            #mainWindow!.setStyle("width","100vw")
            #mainWindow!.setStyle("height","100vh")
            #mainWindow!.setStyle("background-color","#F1F1F1")
            #mainWindow!.setStyle("display","grid")
            
            #loginWrapper! = #mainWindow!.addChildWindow(#mainWindow!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #loginWrapper!.addPanelStyle("loginWrapperPanelStyle")
            
            declare LoginDialog login!
            login! = new LoginDialog(#loginWrapper!)
            login!.setCallback(LoginDialog.ON_LOGIN,#this!,"onLogin")
            login!.setDockStyle("justify-self","center")
            login!.setDockStyle("align-self","center")
        endif
        
        process_events
    methodend
    
    method private void initializeDrawer()
        declare BBjVector menuTiles!
        declare TilesTextHeader header!
        declare BBjChildWindow dashboardWrapper!
        declare DashboardHeader dashboardHeader!

        declare DrawerModel drawerDataModel!
        drawerDataModel! = new DrawerModel()
        drawerDataModel!.setLogoUrl("WebKit/demo/ProdinDemo/assets/prodin_logo.png")
        drawerDataModel!.setLogoSmallUrl("WebKit/demo/ProdinDemo/assets/prodin_logo_small.png")
        drawerDataModel!.setTilesTextHeader("Browse!")
        drawerDataModel!.setDrawerOpenIcon("url(/files/prodinRes/drawer_icon_open.png)")
        drawerDataModel!.setDrawerCloseIcon("url(/files/prodinRes/drawer_icon_close.png)")

        drawerDataModel!.setAvatarUrl("/files/prodinRes/drawerAvatar.png")
        menuTiles! = new BBjVector()
        menuTiles!.add(new DrawerMenuTileEntry(1,"Customers","WebKit/demo/ProdinDemo/assets/users.png"))
        menuTiles!.add(new DrawerMenuTileEntry(2,"Tasks","WebKit/demo/ProdinDemo/assets/tasks.png"))
        menuTiles!.add(new DrawerMenuTileEntry(3,"Quotations","WebKit/demo/ProdinDemo/assets/proposals.png"))
        menuTiles!.add(new DrawerMenuTileEntry(4,"Products","WebKit/demo/ProdinDemo/assets/shopping-cart.png"))
        menuTiles!.add(new DrawerMenuTileEntry(5,"Customers","WebKit/demo/ProdinDemo/assets/users.png"))
        menuTiles!.add(new DrawerMenuTileEntry(6,"Tasks","WebKit/demo/ProdinDemo/assets/tasks.png"))
        menuTiles!.add(new DrawerMenuTileEntry(7,"Quotations","WebKit/demo/ProdinDemo/assets/proposals.png"))
        menuTiles!.add(new DrawerMenuTileEntry(8,"Products","WebKit/demo/ProdinDemo/assets/shopping-cart.png"))
    
        drawerDataModel!.setMenuTiles(menuTiles!)
        #drawer! = new Drawer(#mainWindow!, drawerDataModel!)
        
        header! = new TilesTextHeader(#drawer!.getOptionalControlAboveTiles(), drawerDataModel!.getTilesTextHeader())
        
        header!.setDockStyle("grid-row-start","1")
        header!.setDockStyle("margin-bottom","8px")
        header!.setDockStyle("margin-top","24px")
        header!.setDockStyle("margin-left","40px")
        header!.addTextStyle("drawerTilesTextHeaderStyle")
        header!.setTextStyle("display","block")
        
        dashboardWrapper! = #mainWindow!.addChildWindow(#mainWindow!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        
        dashboardWrapper!.setPanelStyle("left","300px")
        dashboardWrapper!.setPanelStyle("top","0px")
        dashboardWrapper!.setPanelStyle("position","absolute")
        rem dashboardWrapper!.setPanelStyle("height", "174px")
        dashboardWrapper!.setPanelStyle("margin","40px 60px 30px 60px")
        rem screen - 300px drawer - 2 * 60px margin
        dashboardWrapper!.setPanelStyle("width","calc(100vw - 300px - 120px)")
        
        declare DashboardHeaderEntry entry!
        declare BBjVector data! 
        
        data! = new BBjVector()
        data!.add(new DashboardHeaderEntry(0,3,"Deals Scored"))
        data!.add(new DashboardHeaderEntry(1,5,"Upcoming Tasks"))
        data!.add(new DashboardHeaderEntry(2,5,"Planned meetings"))
        data!.add(new DashboardHeaderEntry(3,0,"Hello Worlds"))
        data!.add(new DashboardHeaderEntry(4,0,"Good Byes"))
        data!.add(new DashboardHeaderEntry(5,0,"lalala dudududi"))
        
        #dashboardHeader! = new DashboardHeader(dashboardWrapper!)
        #dashboardHeader!.setTextValues("Jonathan","Here's what's happening","Welcome back,")
        #dashboardHeader!.setEntrys(data!)
        
        declare BBjButton btn!
        btn! = #mainWindow!.addButton(#mainWindow!.getAvailableControlID(),0,0,0,0,"Update count of deals")
        btn!.setStyle("position","absolute")
        btn!.setStyle("top","300px")
        btn!.setStyle("left","500px")
        btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onBTNPush")
    methodend
    
    method public void onBTNPush(BBjButtonPushEvent event!)
        
        #dashboardHeader!.updateCount(0,100)
        
    methodend
    
    method public void onLogin(BBjCustomEvent event!)
        #loginWrapper!.destroy()
        #initializeDrawer()
    methodend
classend