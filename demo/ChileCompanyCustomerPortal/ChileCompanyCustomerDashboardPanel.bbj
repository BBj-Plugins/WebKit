use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/model/ListView/ListViewModel.bbj::ListViewModel
use ::WebKit/model/ListView/ListViewModel.bbj::ListColumnModel
use ::WebKit/model/ListView/ListViewModel.bbj::Field
use ::WebKit/model/ListView/ListViewModel.bbj::Cell
use ::WebKit/framework/ListOverviewPanel/ListOverviewPanel.bbj::ListOverviewPanel


class public ChileCompanyDashboardPanel extends BBjWidget

    method public ChileCompanyDashboardPanel(BBjWindow wnd!)
        #super!.create(wnd!,wnd!.getAvailableControlID())
    methodend

    method public ChileCompanyDashboardPanel(BBjWindow wnd!, BBjInt id!)
        #super!.create(wnd!,id!)
    methodend

    method public ListViewModel initalizeListDataModel()
        declare ListViewModel listDataModel!
        listDataModel! = new ListViewModel("Customers")
        
        listDataModel!.setDatabaseName("ChileCompany")
        listDataModel!.setTableName("Customer")

        REM column mappings
        displayName_field! = new Field("FIRST_NAME + ' ' + LAST_NAME", "DISPLAYNAME")
        id_field! = new Field("CUST_NUM", "ID")
        city_field! = new Field("CITY", "CITY")
        addr_field! = new Field("BILL_ADDR1", "ADDRESS")

        
        firstColumnFields! = new BBjVector()
        firstColumnFields!.add(displayName_field!)
        firstColumnFields!.add(city_field!)
        firstColumnCell! = new Cell(firstColumnFields!)
        firstColumn! = new ListColumnModel("Your Reference", 1)
        firstColumn!.setCellStructure(firstColumnCell!)

        secondColumnFields! = new BBjVector()
        secondColumnFields!.add(id_field!)
        secondColumnCell! = new Cell(secondColumnFields!)
        secondColumn! = new ListColumnModel("Customer ID", 2)
        secondColumn!.setCellStructure(secondColumnCell!)

        thirdColumnFields! = new BBjVector()
        thirdColumnFields!.add(addr_field!)
        thirdColumnCell! = new Cell(thirdColumnFields!)
        thirdColumn! = new ListColumnModel("Address", 3)
        thirdColumn!.setCellStructure(thirdColumnCell!)

        declare BBjVector columnMappings!
        columnMappings! = new BBjVector()

        columnMappings!.add(firstColumn!)
        columnMappings!.add(secondColumn!)
        columnMappings!.add(thirdColumn!)

        listDataModel!.setColumnMappings(columnMappings!)
        
        methodret listDataModel!
    methodend
    
    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        
        declare BBjChildWindow canvas!
        if f_init!>0 then
            canvas! = #getCanvas() 
            listDataModel! = #initalizeListDataModel()
            listOverviewPanel! = new ListOverviewPanel(canvas!)
            listOverviewPanel!.setListDataModel(listDataModel!)
            listOverviewPanel!.doModal()
        FI
        
    methodend    

classend
