use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::BBjWidget/BBjWidget.bbj::BBjWidget

use ::WebKit/framework/PortalFrame/PortalFrame.bbj::PortalFrame
use ::WebKit/Util/Icons.bbj::Icons

use ::WebKit/widgets/common/Overlay/Overlay.bbj::Overlay


class public ChileCompanyMyDashboard extends BBjWidget

    field private Overlay overlay!

    method public ChileCompanyMyDashboard (BBjWindow wnd!)
        ClientUtil.addLocalCSS("WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyMyDashboard.css")
        #super!.create(wnd!,wnd!.getAvailableControlID())
    methodend

    method public ChileCompanyMyDashboard (BBjWindow wnd!, BBjInt id!)
        ClientUtil.addLocalCSS("WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyMyDashboard.css")
        #super!.create(wnd!,id!)
    methodend

    
    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        
        declare BBjChildWindow canvas!
        if f_init!>0 then
            canvas! = #getCanvas() 
            canvas!.addStyle("dashboardWindow")
            canvas!.addPanelStyle("dashboardWindowPanel")
            canvas!.addStaticText(100, 0, 0, 0, 0, Icons.get("check","color:red"))
            rem PortalFrame.getInstance().reloadAllPanels()
            canvas!.addButton(canvas!.getAvailableControlID(),0,0,0,0,"Overlay").setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onBtnPush")
            methodret
        FI
    methodend    


    method public void onBtnPush(BBjButtonPushEvent event!)
        declare BBjChildWindow wnd!
        declare BBjChildWindow dialog!
        
        wnd! = PortalFrame.getInstance().getDialogWindow()
        dialog! = wnd!.addChildWindow(wnd!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())

        #overlay! = new Overlay(wnd!, dialog!)
        #overlay!.setCallback(Overlay.ON_OVERLAY_DISSMISSED,#this!,"onOverlayDissmissed")
        #overlay!.setBackgroundColor("rgba(0,0,0,0.35)")
    methodend

    method public void onOverlayDissmissed(BBjCustomEvent event!)
        PortalFrame.getInstance().destroyDialogWindow()
    methodend
classend
