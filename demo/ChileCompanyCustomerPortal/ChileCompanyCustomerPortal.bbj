use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/framework/PortalFrame/PortalFrame.bbj::PortalFrame
use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/Menu.bbj::MenuItem
use ::WebKit/framework/LoginDialog/SampleAuthProvider.bbj::SampleAuthProvider
if INFO(3,6)<>"6" then call "WebKit/util/deploy.bbj",pgm(-1)

startover: 

begin


ClientUtil.init()
ClientUtil.addLocalCSS("WebKit/css/webkit.css")
ClientUtil.addStyleURL("https://fonts.googleapis.com/icon?family=Material+Icons")
ClientUtil.addStyleURL("https://fonts.googleapis.com/css?family=Lato")
ClientUtil.addLocalCSS("WebKit/demo/assets/demo.css")
ClientUtil.loadThemeFile("WebKit/demo/ChileCompanyCustomerPortal/ChileCompany.css")
ClientUtil.addLocalCSS("WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyCustomerPortal.css")
iconPool$ = STBL("icon-pool", "feather")

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,200,200,"Flexbox",$00000010$)
wnd!.setCallback(BBjAPI.ON_CLOSE,"onClose")


login! = new LoginDialog("Chile Company Demo", new SampleAuthProvider())
login!.setLogo("WebKit/demo/assets/chile-3.jpeg")
login!.setAllowRemember(Boolean.TRUE)


use ::AuthKit/widgets/GoogleLoginWidget.bbj::GoogleLoginWidget
use ::AuthKit/widgets/MicrosoftLoginWidget.bbj::MicrosoftLoginWidget

rem IDs from the SSO providers
rem these ones are working only with localhost, curtesy of BASIS' test setup: 
GoogleLoginWidget.setCLIENTID("862999103108-q9vsolubod0smuupqfhphm3be7jed86p.apps.googleusercontent.com")
MicrosoftLoginWidget.setCLIENTID("ffa8d048-b947-4e4c-a04f-99e058285a44")
MicrosoftLoginWidget.setAUTHORITY("https://login.microsoftonline.com/common")
MicrosoftLoginWidget.setREDIRECTURI("http://localhost:8888/files")

login!.setLoginWithMicrosoft(Boolean.TRUE)
login!.setLoginWithGoogle(Boolean.TRUE)

if !login!.doModal() then
    a=msgbox("ERROR",0,"Error while logging in")
    release
fi

declare Menu m! 
declare MenuItem i!
m! = new Menu()

i! = m!.addMenuItem(m!.getRoot(),101,"Customers","List of Customers","users")
i!.setProgram("::WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyCustomerDashboardPanel.bbj::ChileCompanyDashboardPanel")
i!.setStartType(0); rem 0 = class that implements WebWidget and has a constructor that takes the parent window

i! = m!.addMenuItem(m!.getRoot(),102,"Products","Products - Dashboard","shopping-cart")
i!.setProgram("::WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyItemDashboard.bbj::ChileCompanyItemDashboard")
i!.setStartType(0); rem 0 = class that implements WebWidget and has a constructor that takes the parent window

i! = m!.addMenuItem(m!.getRoot(),103,"Salesperson","Salesperson - Dashboard","user")
i!.setProgram("::WebKit/demo/ChileCompanyCustomerPortal/ChileCompanySalespersonDashboard.bbj::ChileCompanySalespersonDashboard")
i!.setStartType(0); rem 0 = class that implements WebWidget and has a constructor that takes the parent window


declare Menu headerMenu!
declare MenuItem headerMenuItem!
headerMenu! = new Menu()
headerMenuItem! = headerMenu!.addMenuItem(headerMenu!.getRoot(),500,"My Dashboard","Dashboard","home")
headerMenuItem!.setProgram("::WebKit/demo/ChileCompanyCustomerPortal/ChileCompanyMyDashboard.bbj::ChileCompanyMyDashboard")

portal! = new PortalFrame()
portal!.setProfile(login!.getProfile())
portal!.setUsername(login!.getUser())
portal!.setMenu(m!)
portal!.setHeaderMenu(headerMenu!)
portal!.setLogoUrl("WebKit/demo/assets/chile-3.jpeg")
portal!.setLogoSmallUrl("WebKit/demo/assets/chile-3-small.jpeg")

portal!.doModal()

goto startover
