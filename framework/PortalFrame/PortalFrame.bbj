use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/widgets/IconTile/IconTile.bbj::IconTile
use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/Menu.bbj::MenuItem
use ::WebKit/framework/MenuPanel/MenuPanel.bbj::MenuPanel
use ::WebKit/framework/EmbedPanel/EmbedPanel.bbj::EmbedPanel
use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/framework/LoginDialog.bbj::LoginDialog
use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::AuthKit/profile/AccountProfile.bbj::AccountProfile

use ::WebKit/widgets/Drawer/Drawer.bbj::Drawer
use ::WebKit/model/DrawerMenuTileEntry.bbj::DrawerMenuTileEntry
use ::WebKit/widgets/TilesTextHeader/TilesTextHeader.bbj::TilesTextHeader
use ::WebKit/model/DrawerModel.bbj::DrawerModel
use java.util.HashMap

class public PortalFrame

    field private BBjTopLevelWindow window!
    field private Drawer Drawer!
    field private BBjChildWindow Main!
    field private BBjChildWindow AccountDisplay!
    field private BBjChildWindow Avatar!
    
    field public BBjString Username!
    field public BBjString Title!
    field public Menu Menu!
    field public AccountProfile Profile!
    
    field private Boolean drawerOpen! = Boolean.FALSE
    field private HashMap win_list! = new HashMap()
    field private BBjWidget curr_win! 
    field private MenuPanel menuPanel!

    field private BBjPopupMenu AccountMenu!

    field public BBjString LogoUrl!
    field public BBjString LogoSmallUrl!

    method public PortalFrame()
        DynamicLoader.addLocalCSS("WebKit/framework/PortalFrame/PortalFrame.css")
    methodend

    method private void initializeDrawer(Menu menu!)
        declare BBjVector menuTiles!
        declare TilesTextHeader header!

        declare DrawerModel drawerDataModel!
        drawerDataModel! = new DrawerModel()
        drawerDataModel!.setLogoUrl(#LogoUrl!)
        drawerDataModel!.setLogoSmallUrl(#LogoSmallUrl!)
        drawerDataModel!.setTilesTextHeader("Browse!")
        drawerDataModel!.setDrawerOpenIcon("url(/files/prodinRes/drawer_icon_open.png)")
        drawerDataModel!.setDrawerCloseIcon("url(/files/prodinRes/drawer_icon_close.png)")

        drawerDataModel!.setAvatarUrl("/files/prodinRes/drawerAvatar.png")
        menuTiles! = new BBjVector()

        menuitems! = menu!.getChildren(menu!.getRoot()) 
        it! = menuitems!.iterator()
        while it!.hasNext()
            declare auto MenuItem menuitem!
            menuitem! = it!.next()
            id% = menuitem!.getNodeId()
            menuTiles!.add(new DrawerMenuTileEntry(id%, menuitem!.getCaption(), menuitem!.getIcon()))
            REM btn! = new IconTile(#Drawer!,id%)
            REM btn!.setText(menuitem!.getCaption())
            REM btn!.setIcon(menuitem!.getIcon())
            REM btn!.setToolTip(menuitem!.getToolTip())
            REM btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onMenuItemClick")
        wend
    
        drawerDataModel!.setMenuTiles(menuTiles!)
        #Drawer! = new Drawer(#window!, drawerDataModel!)
        #Drawer!.setCallback(Drawer.ON_DRAWER_TILE_PRESSED, #this!, "onMenuItemClick")
        #Drawer!.setCallback(Drawer.ON_DRAWER_STATE_CHANGED, #this!, "onDrawerToggle")
        
        header! = new TilesTextHeader(#Drawer!.getOptionalControlAboveTiles(), drawerDataModel!.getTilesTextHeader())
        
        header!.setDockStyle("grid-row-start","1")
        header!.setDockStyle("margin-bottom","8px")
        header!.setDockStyle("margin-top","24px")
        header!.setDockStyle("margin-left","40px")
        header!.addTextStyle("drawerTilesTextHeaderStyle")
        header!.setTextStyle("display","block")
    methodend
    
    method public Boolean doModal()

            sysgui! =BBjAPI().openSysGui("X0")
            
            #window! = CAST(BBjTopLevelWindow, sysgui!.addWindow(sysgui!.getAvailableContext(),25,25,1200,750,#Title!,$01101083$))
            
            rem add one invisible button to force the BASIS variables to be loaded for CSS            
            #window!.addButton(1000,0,0,0,0,"TEST",$0010$ )
            
            
            main! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,100,80,"",$00100800$,sysgui!.getAvailableContext())
            main!.addStyle("mainarea")
            #Main! = cast(BBjChildWindow,main!)
            #Main!.setPanelStyle("margin-left", "320px")
             
            #initializeDrawer(#Menu!)
            REM #AccountDisplay! = CAST(BBjChildWindow,cw_top!.addChildWindow(cw_top!.getAvailableControlID(),0,0,100,80,"",$00100800$,sysgui!.getAvailableContext()))
            REM #AccountDisplay!.setCallback(BBjAPI.ON_POPUP_REQUEST,#this!,"onAvatarAreaClick")
            REM 
            REM account_name! = #AccountDisplay!.addStaticText(1221,0,0,200,80,#Username!)
            REM account_name!.addStyle("account")
            REM 
            REM #Avatar! = #AccountDisplay!.addChildWindow(100,0,0,100,80,"",$00100800$,sysgui!.getAvailableContext())
            REM #Avatar!.addStyle("avatar")
            REM 
            REM #AccountMenu! = BBjAPI().getSysGui().addPopupMenu()
            REM menu_logout!=#AccountMenu!.addMenuItem(-32027,"Logout")
            REM menu_logout!.setCallback(BBjAPI.ON_POPUP_ITEM_SELECT,"onAccountLogout")
            REM 
            REM #AccountDisplay!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onAvatarAreaClick")
            REM 
            REM if #Profile! <> null() then
            REM     #Avatar!.setDockStyle("background-image","url("+#Profile!.getPictureUrl()+")")
            REM fi
            REM 
            REM BBjAPI().setCustomEventCallback("logout","logout")
            
            
            anchor$ = ClientUtil.getUrlAnchor()
            if anchor$>"" then
                #navigateTo(anchor$)
            fi

                    
            process_events
            
            logout:
                methodret 1
            
    methodend
    
    method public void navigateTo(BBjString anchor$)
        item! = #Menu!.getItem(anchor$)
        if item! <> null() then
            #navigateTo(item!)
        fi
   methodend

    method public void onMenuItemClick(BBjCustomEvent ev!)
        nodeId=num(str(ev!.getObject()))
        item!=#Menu!.getItem(nodeId)
        #navigateTo(item!)
   methodend

   method public void navigateTo(MenuItem item!)
        if #curr_win! <> null() and !#curr_win!.isDestroyed() then
            #curr_win!.setVisible(0)
            #curr_win!=null()
        fi
                
        if item!.hasChildren() then
            if (#menuPanel! = null()) then
                #menuPanel! = new MenuPanel(#Main!)
                #menuPanel!.setMenu(#Menu!)
                #menuPanel!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onMenuItemClick")
            fi
            #menuPanel!.setParentNode(item!.getNodeId())
            #menuPanel!.setVisible(1)
            #curr_win! = #menuPanel! 
        else
        
            if #win_list!.containsKey(item!.getNodeId()) then
                #curr_win!= CAST(BBjWidget,#win_list!.get(item!.getNodeId()))
                #curr_win!.setVisible(1)
            else
                pgm$ = item!.getProgram()
                if pgm$>"" then
                    starttype = item!.getStartType()
                    
                    switch starttype
                        case 0
                            x! = null()
                            x! = eval("new "+pgm$+"(#Main!)",err=*next)
                            if x! = null() then
                                a = msgbox("Error starting "+item!.getCaption(),0,"ERROR")
                            else 
                                #curr_win! = CAST(BBjWidget,x!)
                            fi
                            break
                            
                        case 1
                        case 2
                            x! = new EmbedPanel(#Main!)
                            x!.start(item!)
                            #curr_win! = CAST(BBjWidget,x!)
                            x!.setCallback(BBjAPI().ON_CLOSE,#this!,"onEmbedPanelClose")
                            break
                        case default
                            rem ignore
                            break
                    swend
                    if #curr_win! <> null() then
                        #win_list!.put(item!.getNodeId(),#curr_win!)
                    fi
                    
                fi
            fi
        fi
        ClientUtil.setUrlAnchor(item!.getCaption(),item!.getCaption())
    methodend
    
    method public void onAvatarAreaClick(BBjEvent ev!)
        #AccountMenu!.show(#Avatar!,5,50)
    methodend
    
    method public void onAccountLogout (BBjEvent ev!)
        a=msgbox("logout")
        LoginDialog.clearRememberToken()
        BBjAPI().postCustomEvent("logout","")
    methodend
                
    method public void onEmbedPanelClose(BBjCustomEvent ev!)
        item! = ev!.getObject()
        nodeId = item!.getNodeId()
        if #win_list!.containsKey(nodeId) then
            #win_list!.remove(nodeId)
        fi
         
    methodend

    method public void onDrawerToggle(BBjCustomEvent ev!)
       state = num(str(ev!.getObject()))
       if state = 1
          #Main!.setPanelStyle("margin-left", "320px")
       else
          #Main!.setPanelStyle("margin-left", "124px")
       fi
    methodend

    method public void onToggleMenu(BBjEvent ev!)
    rem drawer_status 0=open, 1=closed
    if #drawerOpen! then
         #drawerOpen!=Boolean.FALSE
         #Drawer!.addStyle("drawerclosed")
         #Drawer!.removeStyle("draweropen")
    else
         #drawerOpen!=Boolean.TRUE
         #Drawer!.addStyle("draweropen")
         #Drawer!.removeStyle("drawerclosed")
    fi
    methodend
return

classend



