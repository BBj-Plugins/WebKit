use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/widgets/InputField/InputField.bbj::InputField
use ::WebKit/framework/LoginDialog/SampleAuthProvider.bbj::SampleAuthProvider
use ::AuthKit/profile/GoogleAccountProfile.bbj::GoogleAccountProfile
use ::AuthKit/profile/MicrosoftAccountProfile.bbj::MicrosoftAccountProfile
use ::AuthKit/profile/AccountProfile.bbj::AccountProfile
use ::AuthKit/widgets/GoogleLoginWidget.bbj::GoogleLoginWidget
use ::AuthKit/widgets/MicrosoftLoginWidget.bbj::MicrosoftLoginWidget
use ::AuthKit/totp/TOTP.bbj::TOTP
use ::WebKit/framework/LoginDialog/IAuthProvider.bbj::IAuthProvider

use ::D:/basis/bbj/plugins/WebKit/framework/LoginDialog/LoginDialogBuilder.bbj::LoginDialogBuilder


use ::D:\GIT\IH\Prodin\bbj\ForgotPassword.bbj::ForgotPassword

class public LoginDialog

    field public static BBjNumber ON_LOGIN = 800001
    field private IAuthProvider authProvider!
    field private BBjTopLevelWindow window!
    
    field private BBjChildWindow loginWrapper!
    field private LoginDialogBuilder loginContent!
    
    field private BBjChildWindow forgotWrapper!
    field private LoginDialogBuilder forgotContent!
    
    field private BBjSysGui sysGui!
    field public BBjString User$ = ""
    field public Boolean AllowRemember! = Boolean.FALSE
    
    field public Boolean LoginWithMicrosoft! = Boolean.FALSE
    field public Boolean LoginWithGoogle! = Boolean.FALSE

    field private InputField password! 
    field private InputField username! 
    field private AccountProfile Profile!
    field private BBjString logoURL$
    
    method public LoginDialog()
    methodend
      
    method public LoginDialog(BBjString title$, IAuthProvider authProvider!)  
        #authProvider! = authProvider!
        bbjutils! = new ::BBUtils.bbj::BBUtils()
        DynamicLoader.addLocalCSS("WebKit/framework/LoginDialog/LoginDialog.css")

        #sysGui! = BBjAPI().openSysGui("X0")
        #window! = #sysGui!.addWindow(#sysGui!.getAvailableContext(),25,25,1200,750, title$, $01101083$)
        #window!.addPanelStyle("loginWrapperPanelStyle")
    methodend

    method public void setLogo(BBjString logo$)
        #logoURL$ = logo$
    methodend
    
    method public void buildLoginContent()
        #loginWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #loginWrapper!.addPanelStyle("loginWidgetPanelStyle")
        
        #loginContent! = new LoginDialogBuilder(#this!,#loginWrapper!)
        #loginContent!.addLogo(#logoURL$)
        #loginContent!.addUsernameInput("Username", "name@company.com")
        #loginContent!.addPasswordInput("Password", "name@company.com")
        #loginContent!.addRememberMeBox()
        #loginContent!.addFeedback("Invalid username and password combination.")
        #loginContent!.addSubmitButton("Login", "login")
        #loginContent!.addRedirect("Forgot Password", "forgotPassword")      
    methodend
    
    method public void buildForgotContent()
        #forgotWrapper! = #window!.addChildWindow(#window!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #forgotWrapper!.addPanelStyle("loginWidgetPanelStyle")
                
        #forgotContent! = new LoginDialogBuilder(#this!,#forgotWrapper!)
        #forgotContent!.addLogo(#logoURL$)
        #forgotContent!.addPageTitle("Request New Password")
        #forgotContent!.addUsernameInput("Email Address", "name@company.com")
        #forgotContent!.addSubmitButton("Send Request", "login")
        #forgotContent!.addRedirect("Return to Login", "returnLogin")  
    methodend

    method public void buildNewPasswordContent()
            
        
    methodend

    method public Boolean doModal()

        if #AllowRemember! then
            token$ = BBjAPI().getThinClient().getUserProperty(0,"remember",err=*next)
            if token$>"" and #authProvider!.checkToken(token$) then
                token$ = #authProvider!.getToken()
                BBjAPI().getThinClient().setUserProperty(0,"Strict","remember",token$)
                #User$ = #authProvider!.getUser()
                methodret Boolean.TRUE
            fi
        fi  
        
        #buildLoginContent()

        process_events

        login:
            user$=#loginContent!.getUsername().getText(0)
            pass$=#loginContent!.getPassword().getText(1)
                
                if #authProvider!.checkLogin(user$,pass$) then
                    #User$ = user$
                    if rememberMe! <> null() AND rememberMe!.isSelected() then
                        token$ = #authProvider!.getToken()
                        BBjAPI().getThinClient().setUserProperty(0,"Strict","remember",token$)
                    fi
                    
REM                     #loginWrapper!.destroy()
                    methodret Boolean.TRUE
                else
                #loginContent!.getContent().getControl(99).setVisible(1)
                fi
                return
           
           onGoogleLogin:
REM            onMicrosoftLogin:
REM                 ev! = BBjAPI().getLastEvent()
REM                 profile! = ev!.getObject()
REM                 if #authProvider!.checkLoginWithAccountProfile(profile!) then
REM                     #User$ = str(profile!.getFullName())
REM                     #Profile! = CAST(AccountProfile,profile!)
REM                     #window!.destroy()
REM                     methodret Boolean.TRUE
REM                 fi
REM                 return

  
    methodend
    
    method public BBjChildWindow getLoginWrapper()
        methodret #loginWrapper!
    methodend


REM  |||||||||||||| 
REM    REDIRECTS  
REM  |||||||||||||| 
    method public void forgotPassword(BBjMouseDownEvent event!)   
        #loginWrapper!.setStyle("display", "none")
 
        #buildForgotContent()
    methodend
    
    
    method public void returnLogin(BBjMouseDownEvent event!)
        #forgotWrapper!.setStyle("display", "none")
        #loginWrapper!.setStyle("display", "block")
    methodend
    

    method public AccountProfile getProfile()
        methodret #Profile!
    methodend
    
    method public static void clearRememberToken()
        BBjAPI().getThinClient().setUserProperty(0,"Strict","remember",token$)
    methodend

classend

token$ = BBjAPI().getThinClient().getUserProperty(0,"remember",err=*next)
if token$>"" then 
    if msgbox("Clear Remember Token??",36,"Token") = 6 then
        LoginDialog.clearRememberToken()
    fi
fi

l! = new LoginDialog(new SampleAuthProvider())
l!.setAllowRemember(Boolean.TRUE)

if l!.doModal() then
    a=msgbox(l!.getUser(),0,"SUCCESS")
fi

