use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/widgets/InputField/InputField.bbj::InputField
use ::WebKit/widgets/InputField/IFieldReq.bbj::IFieldReq

class public LoginDialogWindow extends BBjWidget

    field private LoginDialog loginDialog!
    field private BBjChildWindow content!

    field private InputField username!
    field private InputField password! 
    field private InputField repeatPassword!

    field private BBjButton submitButton!
    field private BBjStaticText redirect!

    field private BBjString memory$

    rem field private BBjStaticText feedback!

    method public LoginDialogWindow(LoginDialog loginDialog!, BBjWindow wrapper!)
        #loginDialog! = loginDialog!
        #content! = wrapper!.addChildWindow(wrapper!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #content!.setDockStyle("height","calc(531px - 112px)")
        #content!.setDockStyle("padding","56px 44px")
        #content!.addPanelStyle("loginWidgetContentPanelStyle")
    methodend 

    rem |||||| GETTER & SETTER ||||||
    rem method public LoginDialog getLoginDialog())
    rem     methodret #loginDialog!
    rem methodend

    method public BBjChildWindow getContent()
        methodret #content!
    methodend

    method public InputField getUsername()
        methodret #username!
    methodend

    method public void setUsername(InputField username!)
        #username! = username!
    methodend

    method public InputField getPassword()
        methodret #password!
    methodend

    method public void setPassword(InputField password!)
        #password! = password!
    methodend

    method public InputField getRepeatPassword()
        methodret #repeatPassword!
    methodend

    method public void setRepeatPassword(InputField repeatPassword!)
        #repeatPassword! = repeatPassword! 
    methodend

    method public BBjButton getSubmitButton()
        methodret #submitButton! 
    methodend

    method public void setSubmitButton(BBjButton button!)
        #submitButton! = button!
    methodend

    method public BBjStaticText getRedirect()
        methodret #redirect! 
    methodend

    method public void setRedirect(BBjStaticText redirect!)
        #redirect!  = redirect! 
    methodend
    
    rem method public BBjString getMemory()
    rem     methodret #memory!
    rem methodend

    rem method public void setMemory(BBjString memory$)
    rem     #memory$ = memory$ 
    rem methodend    
    


    rem |||||| CALLBACKS ||||||
    method public void onForgotPwHover(BBjMouseEnterEvent event!)
        #redirect!.addStyle("hover")
    methodend

    method public void onForgotPwHoverExit(BBjMouseExitEvent event!)
        #redirect!.removeStyle("hover")
    methodend

    method public void onButtonHover(BBjMouseEnterEvent event!)
        #submitButton!.addStyle("hover")
    methodend

    method public void onButtonHoverExit(BBjMouseExitEvent event!)
        #submitButton!.removeStyle("hover")
    methodend

    method public void verifyNewPassword(BBjEditModifyEvent event!)
            #password!.onInputChange(event!)
            #repeatPassword!.setSubText("")
    methodend

    method public void verifyRepeatPassword(BBjEditModifyEvent event!)
        newPassword$ = str(#password!.getText())
        repeatPassword$ = str(#repeatPassword!.getText())

        if newPassword$ <> repeatPassword$ then 
            if  #repeatPassword! <> null() then
                #repeatPassword!.setSubText("Passwords don't match")
            else
                a = msgbox("Error that should not occur. -LoginDialogWindow-verifyRepeatPassword()")
            endif
        else
            #repeatPassword!.setSubText("")
        endif
    methodend



    method public Boolean passwordCallback(BBjCustomEvent event!)
        field$ = str(event!.getObject())
        a = msgbox("password field event fired " + field$)
        methodret 1
    methodend


    method public void onUserIconPressed(BBjCustomEvent event!)
        a = msgbox("UserIcon Pressed")
    methodend
    



    rem  method public void onShowPasswordIconPressed(BBjCustomEvent event!)
    rem     if #password!.isPasswordVisible() then 
    rem         #password!.setPasswordVisible(0)
    rem         #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye.png")
    rem     else
    rem         #password!.setPasswordVisible(1)
    rem         #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye-off.png")
    rem     endif    
    rem methodend



    rem rem ||| INPUTFIELD CALLBACKS ||||
    rem method public void onUsernameChange(BBjEditModifyEvent event!)
    rem     #onInputChange(#username!, event!.getText(),#usernameInputFieldType!)
    rem methodend

    rem method public void onPasswordChange(BBjEditModifyEvent event!)
    rem     #onInputChange(#password!, event!.getText(), #passwordInputFieldType!)
    rem methodend

    rem method public void onRepeatPasswordChange(BBjEditModifyEvent event!)
    rem     #onInputChange(#repeatPassword!, event!.getText(), #repeatPasswordInputFieldType!)
    rem methodend

    rem method public void onInputChange(InputField inputField!, BBjString input!, BBjString fieldType!)
       
    rem     if input!.length() <> 0 then 
    rem     #clearStyles()
    rem         if inputField!.getIsPasswordField() then
    rem             inputField!.getPasswordField().addStyle("focus")
    rem         else
    rem             inputField!.getInputField().addStyle("focus")   
    rem         endif
    rem     endif   

    rem     inputField!.getLabel().addStyle("focus")

    rem     #validateAllInputFields()
        
    rem     #setSubmit(#canSubmit()) 
    rem methodend

    rem method public void setSubmit(Boolean canSubmit!)
    rem     if canSubmit! then 
    rem         #submitButton!.removeStyle("disabled")
    rem         #submitButton!.setEnabled(1)
    rem     else 
    rem         #submitButton!.addStyle("disabled")
    rem         #submitButton!.setEnabled(0)
    rem     endif   
    rem methodend

    rem method public void validateInputField(InputField inputField!, BBjString fieldType!)
    rem     input! = inputField!.getText()

    rem     if input!.length() > 0 then
    rem         if fieldType! <> null() or fieldType! <> "" then
    rem             switch fieldType!
    rem                 case "username"
    rem                     res! = #loginDialog!.getFieldReq().username(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break

    rem                 case "password"
    rem                     res! = #loginDialog!.getFieldReq().password(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break
                    
    rem                 case "newpassword"
    rem                     res! = #loginDialog!.getFieldReq().newPassword(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break    
                    
    rem                 case "repeatpassword"
    rem                     res! = #loginDialog!.getFieldReq().repeatPassword(input!, #password!.getText())
    rem                     inputField!.setSubText(res!) 

    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break        
    rem             swend
    rem         endif
    rem     else 
    rem         rem FOR DEVELOPMENT SO THEY CAN LOGIN WITHOUT PASSWORD
    rem         if fieldType! = "password" then 
    rem             inputField!.setValid(Boolean.TRUE)
    rem         else 
    rem             inputField!.setValid(Boolean.FALSE)
    rem         endif
    rem     endif    
    rem methodend

    rem method public void validateAllInputFields()
    rem     if #username! <> null() then 
    rem         #validateInputField(#username!,#usernameInputFieldType!)
    rem     endif
    rem     if #password! <> null() then
    rem         #validateInputField(#password!,#passwordInputFieldType!)
    rem     endif
    rem     if #repeatPassword! <> null() then
    rem         #validateInputField(#repeatPassword!,#repeatPasswordInputFieldType!)
    rem     endif
    rem methodend

    rem method public Boolean canSubmit()
    rem     if #username! <> null() then 
    rem         if #username!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     if #password! <> null() then 
    rem         if #password!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     if #repeatPassword! <> null() then 
    rem         if #repeatPassword!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     methodret Boolean.TRUE
    rem methodend

    method public void clearStyles()
        if #username! <> null() then 
            #username!.clearStyle()
        endif
        if #password! <> null() then 
            #password!.clearStyle()
        endif
        if #repeatPassword! <> null() then 
            #repeatPassword!.clearStyle()
        endif
    methodend

    rem |||||| REDIRECTS ||||||
    method public void gotoForgotPassword(BBjMouseDownEvent event!) 
        #loginDialog!.gotoForgotPassword()
    methodend  

    method public void gotoLogin(BBjButtonPushEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoLogin(BBjMouseDownEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoNewPassword(BBjButtonPushEvent event!)
        #loginDialog!.gotoNewPassword(#memory$)
        rem print memory$; escape
    methodend

    method public void requestForgotPasswordToken(BBjButtonPushEvent event!)      
        username$ = #memory$
        
        if username$ = "" then
            #loginDialog!.requestForgotPasswordToken(#username!.getText()) 
        else 
            #loginDialog!.requestForgotPasswordToken(username$) 
        endif     
    methodend

    method public void setPasswordWithToken(BBjButtonPushEvent event!)
        #loginDialog!.setPasswordWithToken(#password!.getText()) 
    methodend
classend