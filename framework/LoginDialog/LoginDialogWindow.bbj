use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/widgets/InputField/InputField.bbj::InputField
use ::WebKit/widgets/InputField/extensions/PasswordField.bbj::PasswordField

use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog

class public LoginDialogWindow extends BBjWidget

    field private LoginDialog loginDialog!
    field private BBjChildWindow content!
    
    field private InputField username! 
    field private PasswordField password! 
    field private PasswordField repeatPassword! 
    field private BBjCheckBox rememberMe!
    field private BBjButton submitButton!
    field private BBjStaticText redirect!

    field private BBjString memory$

    rem field private BBjStaticText feedback!

    method public LoginDialogWindow(LoginDialog loginDialog!, BBjWindow wrapper!)
        #loginDialog! = loginDialog!
        #content! = wrapper!.addChildWindow(wrapper!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #content!.setDockStyle("height","calc(531px - 112px)")
        #content!.setDockStyle("padding","56px 44px")
        #content!.addPanelStyle("loginWidgetContentPanelStyle")
    methodend 

    

    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem ||||||||||||| GETTERS & SETTERS ||||||||||||
    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem method public LoginDialog getLoginDialog())
    rem     methodret #loginDialog!
    rem methodend

    method public BBjChildWindow getContent()
        methodret #content!
    methodend

    method public InputField getUsername()
        methodret #username!
    methodend

    method public void setUsername(InputField username!)
        #username! = username!
    methodend

    method public PasswordField getPassword()
        methodret #password!
    methodend

    method public void setPassword(PasswordField password!)
        #password! = password!
    methodend

    method public PasswordField getRepeatPassword()
        methodret #repeatPassword!
    methodend

    method public void setRepeatPassword(PasswordField repeatPassword!)
        #repeatPassword! = repeatPassword! 
    methodend

    method public BBjCheckBox getRememberMe()
        methodret #rememberMe!
    methodend

    method public void setRememberMe (BBjCheckBox rememberMe!)
        #rememberMe! = rememberMe!
    methodend

    method public BBjButton getSubmitButton()
        methodret #submitButton! 
    methodend

    method public void setSubmitButton(BBjButton button!)
        #submitButton! = button!
    methodend

    method public BBjStaticText getRedirect()
        methodret #redirect! 
    methodend

    method public void setRedirect(BBjStaticText redirect!)
        #redirect!  = redirect! 
    methodend
    
    method public BBjString getMemory()
        methodret #memory!
    methodend

    method public void setMemory(BBjString memory$)
        #memory$ = memory$ 
    methodend    
    

    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem |||||||||||||||| CALLBACKS |||||||||||||||||
    rem ||||||||||||||||||||||||||||||||||||||||||||
    method public void onForgotPwHover(BBjMouseEnterEvent event!)
        #redirect!.addStyle("hover")
    methodend

    method public void onForgotPwHoverExit(BBjMouseExitEvent event!)
        #redirect!.removeStyle("hover")
    methodend

    method public void onButtonHover(BBjMouseEnterEvent event!)
        #submitButton!.addStyle("hover")
    methodend

    method public void onButtonHoverExit(BBjMouseExitEvent event!)
        #submitButton!.removeStyle("hover")
    methodend



    rem ||||||||||||||||||||||||||||||||||||||||||||
    rem ||||||||| LOGIN INPUT VALIDATION |||||||||||
    rem ||||||||||||||||||||||||||||||||||||||||||||
    method public void validateUsername(BBjEditModifyEvent event!)
        #username!.onInputChange(event!)

        #username!.getInputField().removeStyle("error")
        
        if #password! <> null()
            #password!.setSubText("")
            #password!.getInputField().removeStyle("error")
        endif
    methodend

    method public void validatePassword(BBjEditModifyEvent event!)
        #password!.onInputChange(event!)
        
        #username!.getInputField().removeStyle("error")
        #password!.getInputField().removeStyle("error")
    methodend

    method public void validateNewPassword(BBjEditModifyEvent event!)
            #password!.onInputChange(event!)

            #repeatPassword!.setSubText("")
    methodend
    
     method public void onShowPasswordIconPressed(BBjCustomEvent event!)
        if #password!.isPasswordVisible() then 
            #password!.setPasswordVisible(0)
        else
            #password!.setPasswordVisible(1)
        endif    
    methodend

    method public void validateRepeatPassword(BBjEditModifyEvent event!)
        if #repeatPassword! = null() then 
            a = msgbox("Error that should not occur. -LoginDialogWindow-verifyRepeatPassword()")
            rem GOTO LOGIN - break out method
        endif

        newPassword! = #password!.getInput()
        repeatPassword! = #repeatPassword!.getInput()

        #repeatPassword!.setSubText("")

        if repeatPassword!.length() > newPassword!.length() - 1 then  
            if newPassword! <> repeatPassword! then 
                #repeatPassword!.setSubText("Passwords don't match")
            else
                #repeatPassword!.setSubText("")
            endif
        endif

        if repeatPassword! = "" then 
            #repeatPassword!.setSubText("")
        endif
    methodend

    method public void onBadLogin() 
        #username!.getInputField().addStyle("error")   
        #password!.getInputField().addStyle("error")
        #password!.setInput("")
        #password!.setSubText("Invalid username and password combination")
        #password!.setText("")
    methodend




     









    rem method public void setSubmit(Boolean canSubmit!)
    rem     if canSubmit! then 
    rem         #submitButton!.removeStyle("disabled")
    rem         #submitButton!.setEnabled(1)
    rem     else 
    rem         #submitButton!.addStyle("disabled")
    rem         #submitButton!.setEnabled(0)
    rem     endif   
    rem methodend

    rem method public void validateInputField(InputField inputField!, BBjString fieldType!)
    rem     input! = inputField!.getText()

    rem     if input!.length() > 0 then
    rem         if fieldType! <> null() or fieldType! <> "" then
    rem             switch fieldType!
    rem                 case "username"
    rem                     res! = #loginDialog!.getFieldReq().username(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break

    rem                 case "password"
    rem                     res! = #loginDialog!.getFieldReq().password(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break
                    
    rem                 case "newpassword"
    rem                     res! = #loginDialog!.getFieldReq().newPassword(input!)
    rem                     inputField!.setSubText(res!)
                        
    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break    
                    
    rem                 case "repeatpassword"
    rem                     res! = #loginDialog!.getFieldReq().repeatPassword(input!, #password!.getText())
    rem                     inputField!.setSubText(res!) 

    rem                     if res! <> "" then
    rem                         inputField!.setValid(Boolean.FALSE)
    rem                     else 
    rem                         inputField!.setValid(Boolean.TRUE)
    rem                     endif
    rem                 break        
    rem             swend
    rem         endif
    rem     else 
    rem         rem FOR DEVELOPMENT SO THEY CAN LOGIN WITHOUT PASSWORD
    rem         if fieldType! = "password" then 
    rem             inputField!.setValid(Boolean.TRUE)
    rem         else 
    rem             inputField!.setValid(Boolean.FALSE)
    rem         endif
    rem     endif    
    rem methodend

    rem method public void validateAllInputFields()
    rem     if #username! <> null() then 
    rem         #validateInputField(#username!,#usernameInputFieldType!)
    rem     endif
    rem     if #password! <> null() then
    rem         #validateInputField(#password!,#passwordInputFieldType!)
    rem     endif
    rem     if #repeatPassword! <> null() then
    rem         #validateInputField(#repeatPassword!,#repeatPasswordInputFieldType!)
    rem     endif
    rem methodend

    rem method public Boolean canSubmit()
    rem     if #username! <> null() then 
    rem         if #username!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     if #password! <> null() then 
    rem         if #password!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     if #repeatPassword! <> null() then 
    rem         if #repeatPassword!.getValid() <> Boolean.TRUE then 
    rem             methodret Boolean.FALSE
    rem         endif
    rem     endif
    rem     methodret Boolean.TRUE
    rem methodend

    method public void clearStyles()
        if #username! <> null() then 
            #username!.clearStyle()
        endif
        if #password! <> null() then 
            #password!.clearStyle()
        endif
        if #repeatPassword! <> null() then 
            #repeatPassword!.clearStyle()
        endif
    methodend

    rem |||||| REDIRECTS ||||||
    method public void gotoForgotPassword(BBjMouseDownEvent event!) 
        #loginDialog!.gotoForgotPassword()
    methodend  

    method public void gotoLogin(BBjButtonPushEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoLogin(BBjMouseDownEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoNewPassword(BBjButtonPushEvent event!)
        #loginDialog!.gotoNewPassword(#memory$)
    methodend

    method public void requestForgotPasswordToken(BBjButtonPushEvent event!)      
        username$ = #memory$
        
        if username$ = "" then
            #loginDialog!.requestForgotPasswordToken(#username!.getInput()) 
        else 
            #loginDialog!.requestForgotPasswordToken(username$) 
        endif     
    methodend

    method public void setPasswordWithToken(BBjButtonPushEvent event!)
        #loginDialog!.setPasswordWithToken(#password!.getInput()) 
    methodend
classend