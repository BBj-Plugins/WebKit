use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/widgets/InputField/InputField.bbj::InputField
use ::WebKit/widgets/InputField/IFieldReq.bbj::IFieldReq

class public LoginDialogWindow extends BBjWidget

    field private LoginDialog loginDialog!
    field private BBjChildWindow content!
    
    field private InputField username!
    field private BBjString usernameInputFieldType! 
    field private InputField password! 
    field private BBjString passwordInputFieldType!
    field private InputField repeatPassword!
    field private BBjString repeatPasswordInputFieldType! 
    field private BBjButton submitButton!
    field private BBjStaticText redirect!


    field private BBjString memory$

    rem field private BBjStaticText feedback!

    method public LoginDialogWindow(LoginDialog loginDialog!, BBjWindow wrapper!)
        #loginDialog! = loginDialog!
        #content! = wrapper!.addChildWindow(wrapper!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #content!.setDockStyle("height","calc(531px - 112px)")
        #content!.setDockStyle("padding","56px 44px")
        #content!.addPanelStyle("loginWidgetContentPanelStyle")
    methodend 

    rem |||||| GETTER & SETTER ||||||
    method public LoginDialog getLoginDialog())
        methodret #loginDialog!
    methodend

    method public BBjChildWindow getContent()
        methodret #content!
    methodend

    method public BBjWindow getContent()
        methodret #content!
    methodend

    method public InputField getUsername()
        methodret #username!
    methodend

    method public void setUsername(InputField username!)
        #username! = username!
    methodend

    method public void setUsernameInputFieldType(BBjString fieldType!)
        #usernameInputFieldType! = fieldType!
    methodend
    
    method public void setPasswordInputFieldType(BBjString fieldType!)
        #passwordInputFieldType! = fieldType!
    methodend

    method public void setRepeatPasswordInputFieldType(BBjString fieldType!)
        #repeatPasswordInputFieldType! = fieldType!
    methodend

    method public InputField getPassword()
        methodret #password!
    methodend

    method public void setPassword(InputField password!)
        #password! = password!
    methodend

    method public InputField getRepeatPassword()
        methodret #repeatPassword!
    methodend

    method public void setRepeatPassword(InputField repeatPassword!)
        #repeatPassword! = repeatPassword! 
    methodend

    method public BBjButton getSubmitButton()
        methodret #submitButton! 
    methodend

    method public void setSubmitButton(BBjButton button!)
        #submitButton! = button!
    methodend

    method public BBjStaticText getRedirect()
        methodret #redirect! 
    methodend

    method public void setRedirect(BBjStaticText redirect!)
        #redirect!  = redirect! 
    methodend
    
    method public BBjString getMemory()
        methodret #memory!
    methodend

    method public void setMemory(BBjString memory$)
        #memory$ = memory$ 
    methodend    
    


    rem |||||| CALLBACKS ||||||
    method public void onForgotPwHover(BBjMouseEnterEvent event!)
        #redirect!.addStyle("hover")
    methodend

    method public void onForgotPwHoverExit(BBjMouseExitEvent event!)
        #redirect!.removeStyle("hover")
    methodend

    method public void onButtonHover(BBjMouseEnterEvent event!)
        #submitButton!.addStyle("hover")
    methodend

    method public void onButtonHoverExit(BBjMouseExitEvent event!)
        #submitButton!.removeStyle("hover")
    methodend

    method public void onUserIconPressed(BBjCustomEvent event!)
        a = msgbox("UserIcon Pressed")
    methodend
    
     method public void onShowPasswordIconPressed(BBjCustomEvent event!)
        if #password!.isPasswordVisible() then 
            #password!.setPasswordVisible(0)
            #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye.png")
        else
            #password!.setPasswordVisible(1)
            #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye-off.png")
        endif    
    methodend

    rem ||| INPUTFIELD CALLBACKS ||||
    method public void onUsernameChange(BBjEditModifyEvent event!)
        #onInputChange(#username!, event!.getText(),#usernameInputFieldType!  )
    methodend

    method public void onPasswordChange(BBjEditModifyEvent event!)
        #onInputChange(#password!, event!.getText(), #passwordInputFieldType! )
    methodend

    method public void onRepeatPasswordChange(BBjEditModifyEvent event!)
        #onInputChange(#repeatPassword!, event!.getText(), #repeatPasswordInputFieldType! )
    methodend

    method public void onInputChange(InputField inputField!, BBjString input!, BBjString fieldType!)
   

        if input!.length() = 1 then 
            #clearStyles()
            
            
            if inputField!.getIsPasswordField() then
                inputField!.getPasswordField().addStyle("focus")
            else
                inputField!.getInputField().addStyle("focus")   
            endif
        endif   

        inputField!.getLabel().addStyle("focus")

        rem if #fieldType! <> null() or #fieldType! <> "" then
        rem     switch #fieldType!
        rem         case "username"
        rem             #subText!.setText(#fieldReq!.username(inputText!))
        rem         break

        rem         case "password"
        rem             #subText!.setText(#fieldReq!.password(inputText!))
        rem         break
                
        rem         case "newpassword"
        rem             #subText!.setText(#fieldReq!.newPassword(inputText!))
        rem         break    
                
        rem         case "repeatpassword"
        rem             #subText!.setText(#fieldReq!.repeatPassword(inputText!, #dialog!.getPassword().getText(1)))
        rem             if #subText!.getText() = "" then
        rem         break        
        rem     swend
        rem endif



    methodend
  
    method public void clearStyles()
        if #username! <> null() then 
            #username!.clearStyle()
        endif
        if #password! <> null() then 
            #password!.clearStyle()
        endif
        if #repeatPassword! <> null() then 
            #repeatPassword!.clearStyle()
        endif
    methodend

    rem |||||| REDIRECTS ||||||
    method public void gotoForgotPassword(BBjMouseDownEvent event!) 
        #loginDialog!.gotoForgotPassword()
    methodend  

    method public void gotoLogin(BBjButtonPushEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoLogin(BBjMouseDownEvent event!)
        #loginDialog!.gotoLogin()
    methodend

    method public void gotoNewPassword(BBjButtonPushEvent event!)
        #loginDialog!.gotoNewPassword(#memory$)
        rem print memory$; escape
    methodend

    method public void requestForgotPasswordToken(BBjButtonPushEvent event!)      
        username$ = #memory$
        
        if username$ = "" then
            #loginDialog!.requestForgotPasswordToken(#username!.getText(0)) 
        else 
            #loginDialog!.requestForgotPasswordToken(username$) 
        endif     
    methodend

    method public void setPasswordWithToken(BBjButtonPushEvent event!)
        #loginDialog!.setPasswordWithToken(#password!.getText(1)) 
    methodend
classend