use ::WebKit/framework/LoginDialog/LoginDialog.bbj::LoginDialog
use ::WebKit/widgets/InputField/InputField.bbj::InputField

class public LoginDialogBuilder 

    field private LoginDialog loginDialog!
    field private BBjChildWindow content!
    
    field private InputField username! 
    field private InputField password! 
    field private InputField repeatPassword! 

    field private BBjStaticText feedback!

    field private BBjString memory$

    method public LoginDialogBuilder(LoginDialog loginDialog!, BBjWindow wrapper!)
        rem #loginDialog! = loginDialog!   
        rem #content! = wrapper!.addChildWindow(wrapper!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        rem #content!.setDockStyle("height","calc(531px - 112px)")
        rem #content!.setDockStyle("padding","56px 44px")
        rem #content!.addPanelStyle("loginWidgetContentPanelStyle")

        #this!(loginDialog!, wrapper!, "default")
    methodend 

    method public LoginDialogBuilder(LoginDialog loginDialog!, BBjWindow wrapper!, BBjString memory$)
        #loginDialog! = loginDialog!   
        #content! = wrapper!.addChildWindow(wrapper!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        #content!.setDockStyle("height","calc(531px - 112px)")
        #content!.setDockStyle("padding","56px 44px")
        #content!.addPanelStyle("loginWidgetContentPanelStyle")
        #memory$ = memory$
    methodend

    
    
    method public InputField getUsername()
        methodret #username!
    methodend
    
    method public InputField getPassword()
        methodret #password!
    methodend

    method public InputField getRepeatPassword()
        methodret #repeatPassword!
    methodend

    method public void setFeedback(BBjString message$)
        #feedback!.setText(message$)
    methodend

    method public BBjStaticText getFeedback()
        methodret #feedback!
    methodend

    method public BBjString getMemory()
        methodret #memory!
    methodend
    
    method public BBjChildWindow getContent()
        methodret #content!
    methodend



REM  |||||||||||||| 
REM  ADD COMPONENTS  
REM  ||||||||||||||  

    method public void addLogo(BBjString url$)
        logo! = #content!.addImageCtrl(#content!.getAvailableControlID(),0,0,0,0, url$)
        logo!.setStyle("height","fit-content")
        logo!.setStyle("width","fit-content")
    methodend
    
    method public void addPageTitle (BBjString title$)
        pageTitle! = #content!.addStaticText(#content!.getAvailableControlID(),0,0,0,0,title$)
        pageTitle!.addStyle("loginPageTitle")
    methodend
    
    
    method public void addUsernameInput(BBjString label$)
        #addUsernameInput(label$, "name@company.com")
    methodend
    
    method public void addUsernameInput(BBjString label$, BBjString memory$)
        #username! = new InputField(#content!,#content!.getAvailableControlID(),"WebKit/framework/LoginDialog/assets/user.png")
        #username!.setCallback(InputField.ON_SUFFIX_PRESSED,#this!,"onUserIconPressed")
        #username!.setLabel(label$)
        #username!.setPlaceHolder("name@company.com")
        #username!.setDockStyle("margin-top","50px")

        if memory$ <> "" and memory$ <> "null" then
            rem let x=MSGBOX(memory$, 0, "No Title")
            #username!.setPlaceHolder(memory$)
        endif

    methodend
    
    method public void addUsernameInput(BBjString label$, BBjString placeholder$, BBjInt gridPos!)
        #username! = new InputField(#content!,#content!.getAvailableControlID(),"WebKit/framework/LoginDialog/assets/user.png")
        #username!.setCallback(InputField.ON_SUFFIX_PRESSED,#this!,"onUserIconPressed")
        #username!.setLabel(label$)
        #username!.setPlaceHolder(placeholder$)
        #username!.setDockStyle("margin-top","50px")
        #username!.setStyle("grid-row-start",str(gridPos!))
    methodend
    
    method public void addPasswordInput(BBjString label$, BBjString placeholder$)
        #password! = new InputField(#content!,#content!.getAvailableControlID(),"WebKit/framework/LoginDialog/assets/eye.png",1)
        #password!.setCallback(InputField.ON_SUFFIX_PRESSED,#this!,"onShowPasswordIconPressed")
        #password!.setLabel(label$)
        #password!.setPlaceHolder(placeholder$)
        #password!.setDockStyle("margin-top","28px")
    methodend

    method public void addRepeatPasswordInput(BBjString label$, BBjString placeholder$)
        #repeatPassword! = new InputField(#content!,#content!.getAvailableControlID(),"WebKit/framework/LoginDialog/assets/eye.png",1)
        #repeatPassword!.setCallback(InputField.ON_SUFFIX_PRESSED,#this!,"onShowPasswordIconPressed")
        #repeatPassword!.setLabel(label$)
        #repeatPassword!.setPlaceHolder(placeholder$)
        #repeatPassword!.setDockStyle("margin-top","28px")
    methodend
    
    method public void addTextField (BBjString message$)
        infoMessage! = #content!.addStaticText(#content!.getAvailableControlID(),0,0,0,0,message$)
        infoMessage!.setStyle("margin-top","80px")
        infoMessage!.setStyle("height","50px ")
        infoMessage!.setStyle("font-size","14px")
        rem infoMessage!.setStyle("font-style","italic")
        infoMessage!.setStyle("font-weight","500 ")
    methodend


    method public void addFeedback(BBjString feedback$)
        #feedback! = #content!.addStaticText(#content!.getAvailableControlID(),0,0,0,0,"<html>" + feedback$ + "</html>",$0010$)
        #feedback!.setStyle("color","red")
        #feedback!.setStyle("font-size","12px ")
        #feedback!.setStyle("font-weight","300 ")
        #feedback!.setStyle("font-style","italic")
        #feedback!.setStyle("margin-top", "5px")
    methodend
    
    method public void addSubmitButton(BBjString label$, BBjString methodName$)
        submitBtn! = #content!.addButton(#content!.getAvailableControlID(),0,0,0,0,label$)
        submitBtn!.setCallback(BBjAPI().ON_BUTTON_PUSH,methodName$)
        submitBtn!.setStyle("margin-top","40px")
        submitBtn!.addStyle("loginWidgetBtnStyle")
        submitBtn!.addStyle("loginWidgetBtnLabel")
        submitBtn!.addStyle("loginWidgetBtnControl")
    methodend

    method public void addSubmitButton(BBjString label$, BBjString methodName$, BBjString placeholder$)
        submitBtn! = #content!.addButton(#content!.getAvailableControlID(),0,0,0,0,label$)
        submitBtn!.setCallback(BBjAPI().ON_BUTTON_PUSH,#loginDialog!,methodName$)
        submitBtn!.setStyle("margin-top","40px")
        submitBtn!.addStyle("loginWidgetBtnStyle")
        submitBtn!.addStyle("loginWidgetBtnLabel")
        submitBtn!.addStyle("loginWidgetBtnControl")
    methodend
    
    method public void addRedirect(BBjString redirectText$, BBjString methodName$)
        declare BBjStaticText redirectText!
        declare BBjChildWindow linkWrapper!
    
        linkWrapper! = #content!.addChildWindow(#content!.getAvailableControlID(),0,0,0,0,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
        linkWrapper!.setCallback(BBjAPI.ON_MOUSE_DOWN,#loginDialog!,methodName$)
        linkWrapper!.setDockStyle("grid-row-start","6")
        linkWrapper!.setDockStyle("margin-top","16px")
        linkWrapper!.setDockStyle("justify-self","center")
        linkWrapper!.setDockStyle("height","fit-content")
        linkWrapper!.setDockStyle("width","fit-content")
        
        redirectText! = linkWrapper!.addStaticText(linkWrapper!.getAvailableControlID(),0,0,0,0,redirectText$)
        redirectText!.addStyle("loginWidgetForgotPWStlye")
    methodend
    
    method public void addRememberMeBox()
        rememberMe! = #content!.addCheckBox(#content!.getAvailableControlID(),0,0,0,0,"Keep me signed in")
        rememberMe!.setStyle("margin-top","32px")
        rememberMe!.addStyle("loginWidgetCheckBoxStyle")
        rememberMe!.addStyle("loginWidgetCheckBoxLabel")
        rememberMe!.addStyle("loginWidgetCheckBoxInputWrapper")
        rememberMe!.addStyle("loginWidgetCheckBoxControl")
    methodend
  
REM   END OF COMPONENTS 
  
  
    method public void onUserIconPressed(BBjCustomEvent event!)
        a = msgbox("UserIcon Pressed")
    methodend
    
     method public void onShowPasswordIconPressed(BBjCustomEvent event!)
        if #password!.isPasswordVisible() then 
            #password!.setPasswordVisible(0)
            #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye.png")
        else
            #password!.setPasswordVisible(1)
            #password!.setSuffixIcon("WebKit/framework/LoginDialog/assets/eye-off.png")
        endif    
    methodend
classend