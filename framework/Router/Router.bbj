use ::BBjRouter/BBjRouter.bbj::BBjRouter

use ::WebKit/util/ClientUtil.bbj::ClientUtil

use ::WebKit/framework/Router/RouterProtocol.bbj::RouterProtocol

use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/MenuItem.bbj::MenuItem

class public Router

    field private Menu menu!
    field private BBjRouter router!
    rem this should impl the public void onRouteMatch(BBjCustomEvent ev!) mehtod
    field private RouterProtocol listener!

    method public Router(BBjWindow window!, RouterProtocol listener!)
        #this!(window!, listener!, null())
    methodend

    method public Router(BBjWindow window!, RouterProtocol listener!, Menu menu!)
        #menu! = menu!
        #router! = new BBjRouter(window!)
        #this!.setListener(listener!)
    methodend

    method public void registerMenuRoute(MenuItem item!)
        if #listener! = null() then
            throw "listener is not set", 35
        fi
        path! = item!.getPath()
        rem escape
        if !path!.equals("/") or !path!.isBlank() then
            #router!.register(path!, #listener!, "onRouteMatch")  
        fi
    methodend

    method public void unRegisterMenuRoute(MenuItem item!)
        path! = item!.getPath()
        if !path!.equals("/") or !path!.isBlank() then
            #router!.unregister(path!) 
        fi
    methodend

    method public void registerRoutes()

        if #menu! = null() then
            throw "menu is not set", 43
        fi

        #router!.register("/", #listener!, "onRouteMatch")
        menus! = #menu!.getMenuIndex().entrySet()
        it! = menus!.iterator()
        while it!.hasNext()
            item! = it!.next()
            #registerMenuRoute(item!.getValue())
        wend

        #router!.resolve()
    methodend

    method public void setMenu(Menu menu!)
        #menu! = menu!
    methodend

    method public Menu getMenu(Menu menu!)
        methodret #menu!
    methodend

    method public void setListener(RouterProtocol listener!)
        #listener! = listener!
        #router!.setCallback(BBjRouter.ON_NOT_FOUND, #listener!, "onNotFound")
    methodend

    method public Object getListener(Menu menu!)
        methodret #listener!
    methodend

    method public void navigate(BBjString path$)
        #router!.navigate(path$)
    methodend
classend