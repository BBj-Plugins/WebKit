use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/widgets/IconTile/IconTile.bbj::IconTile

use ::WebKit/widgets/ListTile/ListTile.bbj::ListTile
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/Menu.bbj::MenuItem
use java.util.HashMap

class public TreeListPanel extends BBjWidget

    field public Menu Menu!
    field public BBjNumber parentNodeID
    field public HashMap MenuItemTiles! = new HashMap()

    field public BBjStaticText Headline!
    field public BBjChildWindow MenuTilesBox!
    field public BBjVector colors! = new BBjVector()
    field public String gridRowCss! = ""
    
    field public static BBjNumber ON_FAVORITE_SELECTED = 600
    
    method public TreeListPanel(BBjWindow wnd!)
        DynamicLoader.addLocalCSS("WebKit/framework/TreeListPanel/TreeListPanel.css")
      
        #super!.create(wnd!,wnd!.getAvailableControlID())
        #setVisible(0)
        window! = #getCanvas()
        window!.addPanelStyle("menupanel")
        #createHeadLine(window!)
        #createAdditionalTopPanel()
        #MenuTilesBox! = #getCanvas().addChildWindow(window!.getAvailableControlID(),0,0,100,80,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
        #MenuTilesBox!.addStyle("menuTilesBox")
        #colors!.add("#FFFFFF")
        
        
    methodend
    
    method public void createHeadLine(BBjWindow wnd!)
        #Headline! = wnd!.addStaticText(100,0,0,0,0,"")
        #Headline!.addStyle("tilesheadline")
    methodend
    
    method public void createAdditionalTopPanel()
    
    methodend
     
    
    method private void cleanup()
        if #MenuItemTiles!.size()>0 then
            it! = #MenuItemTiles!.keySet().iterator()
            while it!.hasNext()
                t! = #MenuItemTiles!.get(it!.next())
                t!.destroy()
            wend
            #MenuItemTiles!.clear()
        fi
    methodend
    
    
    method public void setHeadlineText(String text!)
        #Headline!.setText(text!)
    methodend

    method public void setParentNode(BBjNumber nodeId)
        #cleanup()
        #parentNodeID = nodeId
        declare MenuItem node!
        node! = #Menu!.getItem(nodeId)
        #setHeadlineText(node!.getCaption())
        #buildChildren(nodeId,0)
        #MenuTilesBox!.setStyle("grid-template-rows",#gridRowCss!)
    methodend
    
    method public void buildChildren(BBjNumber nodeId,BBjNumber i)
        declare MenuItem node!
        declare MenuItem item!
        node! = #Menu!.getItem(nodeId)
        v! = node!.getChildren()
        it! = v!.iterator()
        css! = ""
        while it!.hasNext()
            item! = cast(MenuItem,it!.next())
             id%  = item!.getNodeId()
            declare ListTile tile!
            tile! = new ListTile(#MenuTilesBox!, id%)
            tile!.setText(item!.getCaption())
            tile!.setLetterColor(str(#colors!.get(MOD(tile!.getID(),#colors!.size()))))
            tile!.setStyle("padding-left",str(5 + (i * 20)) + "px")
            tile!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onMenuItemClick")
            tile!.setCallback(ListTile.ON_FAVORITES_BUTTON_CLICK,#this!,"setFavorite")
            
            if item!.getIcon() <> "" AND item!.getIcon() <> null() then
            
                tile!.setIcon(item!.getIcon())
            endif
            
            #MenuItemTiles!.put(item!.getNodeId(),tile!)
            #buildChildren(id%,i+1)
            if i > 0 then
                tile!.setVisible(0)
            endif
            if item!.hasChildren() then
               tile!.setHeader()
            endif 
            #gridRowCss! = #gridRowCss! + "min-content "
        wend      
    methodend   
    rem todo Add function to save favorites
    method public void setFavorite(BBjCustomEvent event!)
        rem #fireEvent(#ON_FAVORITE_SELECTED, event!.getObject())
    methodend
    
    method public void setColors(BBjVector colors!)
        #colors! = colors!
    methodend

    method public void onMenuItemClick(BBjCustomEvent ev!)
        declare auto MenuItem node!
        declare auto MenuItem item!
        declare auto ListTile tile!
        nodeId=num(str(ev!.getObject()))
        node!=#Menu!.getItem(nodeId)
        if node!.hasChildren() then
            v! = node!.getChildren()
            it! = v!.iterator()
            while it!.hasNext()
                item! = it!.next()
                id%  = item!.getNodeId()            
                tile! = #MenuItemTiles!.get(id%)
                tile!.setVisible(!tile!.isVisible())
            
        wend
        else
            #fireEvent(BBjAPI.ON_BUTTON_PUSH,ev!.getObject())
        fi
    methodend   
classend