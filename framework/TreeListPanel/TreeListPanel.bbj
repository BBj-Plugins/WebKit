use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/widgets/IconTile/IconTile.bbj::IconTile

use ::WebKit/widgets/ListTile/ListTile.bbj::ListTile
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/Menu.bbj::MenuItem
use java.util.HashMap
use ::WebKit/util/Icons.bbj::Icons
use ::Webkit/framework/Favorites/IFavoritesProvider.bbj::IFavoritesProvider
use ::Webkit/framework/Favorites/SampleFavoritesProvider.bbj::SampleFavoritesProvider


class public TreeListPanel extends BBjWidget

    field public Menu Menu!
    field public BBjNumber parentNodeID
    field public HashMap MenuItemTiles! = new HashMap()

    field public BBjStaticText Headline!
    field public BBjChildWindow MenuTilesBox!
    field public BBjVector colors! = new BBjVector()
    
    field public StringBuilder gridRowCss! = new StringBuilder()
    
    field public BBjStaticText toggleFavoritesButton!
    
    field public BBjChildWindow Header!
    field public BBjChildWindow favButtonWrapper!
    
    field public Boolean filterForFavorites! = Boolean.FALSE
    
    field public Boolean favoritesActivated! = Boolean.TRUE
 
    field public static BBjNumber ON_FAVORITE_SELECTED = 600
    
    field public IFavoritesProvider favoritesProvider! 
    
    method public TreeListPanel(BBjWindow wnd!)
        DynamicLoader.addLocalCSS("WebKit/framework/TreeListPanel/TreeListPanel.css")
      
        #super!.create(wnd!,wnd!.getAvailableControlID())
        #setVisible(0)
        
    methodend
    
    method public void redraw(Boolean e_init!)
        
        if e_init! > 0 then
            window! = #getCanvas()
            window!.addPanelStyle("menupanel")
            #createHeadLine(window!)
            #createAdditionalTopPanel()
            #MenuTilesBox! = #getCanvas().addChildWindow(window!.getAvailableControlID(),0,0,100,80,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            #MenuTilesBox!.addStyle("menuTilesBox")
            
            #Header! = #MenuTilesBox!.addChildWindow(#MenuTilesBox!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            #Header!.addStyle("tilesBoxHeader")
            
            Title! = #Header!.addStaticText(#Header!.getAvailableControlID(),0,0,0,0,"APPLICATIONS")
            Title!.addStyle("tilesBoxTitle")
            
            declare BBjChildWindow favButtonWrapper!
            #favButtonWrapper! = #Header!.addChildWindow(#Header!.getAvailableControlID(),0,0,0,0,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            
            #toggleFavoritesButton! = #favButtonWrapper!.addStaticText(#favButtonWrapper!.getAvailableControlID(), 0,0,0,0, Icons.get("tabler","star"))
            #toggleFavoritesButton!.addStyle("trailingIcon")
            #toggleFavoritesButton!.setStyle("background","white")
            #toggleFavoritesButton!.setStyle("color","darkgray")
            #favButtonWrapper!.setCallback(BBjAPI().ON_MOUSE_DOWN,#this!,"onToggleFavorites")    
            #colors!.add("#FFFFFF")
        FI
    methodend
    
    
    method public void createHeadLine(BBjWindow wnd!)
        #Headline! = wnd!.addStaticText(100,0,0,0,0,"")
        #Headline!.addStyle("tilesheadline")
    methodend
    
    method public void setFavoritesProvider(IFavoritesProvider provider!)
        #favoritesProvider! = provider!
    methodend
    
    method public void cleanup()
        if #MenuItemTiles!.size()>0 then
            it! = #MenuItemTiles!.keySet().iterator()
            while it!.hasNext()
                t! = #MenuItemTiles!.get(it!.next())
                t!.destroy()
            wend
            #MenuItemTiles!.clear()
        fi
    methodend
    
    
    method public void setHeadlineText(String text!)
        #Headline!.setText(text!)
    methodend

    method public void setParentNode(BBjNumber nodeId)
        #cleanup()
        #parentNodeID = nodeId
        declare MenuItem node!
        node! = #Menu!.getItem(nodeId)
        #setHeadlineText(node!.getCaption())
        #buildChildren(nodeId,0)
        #MenuTilesBox!.setStyle("grid-template-rows",#gridRowCss!.toString())
    methodend
    
    method public void buildChildren(BBjNumber nodeId,BBjNumber i)
        declare MenuItem node!
        declare MenuItem item!
        node! = #Menu!.getItem(nodeId)
        v! = node!.getChildren()
        it! = v!.iterator()
        css! = ""
    
            
       
        while it!.hasNext()
            item! = cast(MenuItem,it!.next())
            id%  = item!.getNodeId()
            
            
                declare ListTile tile!
                tile! = new ListTile(#MenuTilesBox!, id%)
                tile!.setText(item!.getCaption())
                tile!.setLetterColor(str(#colors!.get(MOD(tile!.getID(),#colors!.size()))))
                tile!.setStyle("padding-left",str(5 + (i * 20)) + "px")
                tile!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onMenuItemClick")
                tile!.setCallback(ListTile.ON_FAVORITES_BUTTON_CLICK,#this!,"setFavorite")
                
                if #favoritesProvider!.isItemFavorite(item!) then
                    tile!.favoriteToggle()
                endif
                
                tile!.toggleFavoritesButton(#favoritesActivated!)
                
                if item!.getIcon() <> "" AND item!.getIcon() <> null() then
                
                    tile!.setIcon(item!.getIcon())
                endif
                
                #MenuItemTiles!.put(item!.getNodeId(),tile!)
                #buildChildren(id%,i+1)
                if i > 0 then
                    tile!.setChild(1)
                    tile!.setVisible(0)
                endif
                if item!.hasChildren() then
                   tile!.setHeader()
                endif 
                #gridRowCss!.append("min-content ")
                
        wend      
    methodend   
    
    method public void onToggleFavorites(BBjMouseDownEvent event!)
        if #filterForFavorites! then
            #toggleFavoritesButton!.removeStyle("favoriteActive")
        else
            #toggleFavoritesButton!.addStyle("favoriteActive")
        endif
       
        #filterForFavorites! = !#filterForFavorites!
        #filterTiles()
    methodend
    
    method public void filterTiles()
       
       it! = #MenuItemTiles!.entrySet().iterator()
       
       while it!.hasNext()
           entry! = it!.next()
           tile! = entry!.getValue()
           if #filterForFavorites! then
               if #favoritesProvider!.isItemFavorite(#Menu!.getItem(entry!.getKey()))
                    tile!.setVisible(1)
               else
                    tile!.setVisible(0)
               fi
               continue
           fi
           if !entry!.getValue().isChild() then
                tile!.setVisible(1)
                if tile!.isExpanded() then
                    tile!.toggleExpand()
                fi
           else
                tile!.setVisible(0)
           fi
           
       wend
       
    methodend
    
    method public void setFavorite(BBjCustomEvent event!)
      
        favorite! = #Menu!.getItem(num(event!.getObject()))
        
        if #favoritesProvider!.isItemFavorite(favorite!) then
            #favoritesProvider!.removeFavorite(favorite!)
        else
            #favoritesProvider!.addFavorite(favorite!)
        endif
        
    methodend
    
    
    method public void setColors(BBjVector colors!)
        #colors! = colors!
    methodend
    
    method public void activateFavorites(Boolean value!)
        #favoritesActivated! = value!
        #favButtonWrapper!.setVisible(value!)      
      
    methodend

    method public void onMenuItemClick(BBjCustomEvent ev!)
        declare auto MenuItem node!
        declare auto MenuItem item!
        declare auto ListTile tile!
        declare auto BBjNumber nodeId
        nodeId=ev!.getObject()
        node!=#Menu!.getItem(nodeId)
        if node!.hasChildren() then
            v! = node!.getChildren()
            it! = v!.iterator()
            while it!.hasNext()
                item! = it!.next()
                id%  = item!.getNodeId()            
                tile! = #MenuItemTiles!.get(id%)
                tile!.setVisible(!tile!.isVisible())
            
        wend
        else
            #fireEvent(BBjAPI.ON_BUTTON_PUSH,ev!.getObject())
        fi
    methodend   
classend