use ::WebKit/framework/TreeListPanel/TreeListPanel.bbj::TreeListPanel
use ::WebKit/widgets/MenuCard/MenuCard.bbj::MenuCard
use ::WebKit/model/Menu.bbj::Menu
use ::WebKit/model/Menu.bbj::MenuItem
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::Webkit/framework/Favorites/SampleFavoritesProvider.bbj::SampleFavoritesProvider


class public MenuCardPanelSorted extends TreeListPanel

    method public MenuCardPanelSorted(BBjWindow wnd!)  
     
        
        DynamicLoader.addLocalCSS("WebKit/framework/MenuCardPanel/MenuCardPanel.css")
        #super!.create(wnd!,wnd!.getAvailableControlID())
        #setVisible(0)
        
    methodend
    
    rem @override
    method public void redraw(Boolean e_init!)
        
        if e_init! > 0 then
            window! = #getCanvas()
            window!.addPanelStyle("menupanel")
            #createHeadLine(window!)
           
            #MenuTilesBox! = #getCanvas().addChildWindow(window!.getAvailableControlID(),0,0,100,80,"",$00108800$,BBjAPI().getSysGui().getAvailableContext())
            #MenuTilesBox!.addStyle("menuTilesBox")
            #MenuTilesBox!.addStyle("menuCardBox")
            
            #Headline!.addStyle("headline")
            
            #colors!.add("#FFFFFF")
            #favoritesProvider! = SampleFavoritesProvider.getInstance()
        FI
    methodend
    
    rem @override
    method public void setParentNode(BBjNumber nodeId)
        #cleanup()
        #parentNodeID = nodeId
        declare MenuItem node!
        node! = #Menu!.getItem(nodeId)
        #setHeadlineText(node!.getCaption())
        #buildChildren(nodeId,0)
    methodend
    
    rem @override
    method public void buildChildren(BBjNumber nodeId,BBjNumber i)
    
        declare MenuItem node!
        declare MenuItem item!
        declare BBjVector headers! 
        headers! = new BBjVector()
        declare BBjVector children!
        children! = new BBjVector()
        
        
        node! = #Menu!.getItem(nodeId)
        v! = node!.getChildren()
        it! = v!.iterator()
        
        while it!.hasNext()
            item! = cast(MenuItem,it!.next())
            if item!.hasChildren() then
                headers!.add(item!)
            else
                children!.add(item!)
            fi
        wend
        
        css! = ""
        it! = children!.iterator()
          
        while it!.hasNext()
            item! = cast(MenuItem,it!.next())
            id%  = item!.getNodeId()
            tile! = new MenuCard(#MenuTilesBox!, id%)
            tile!.setMenuItem(item!)
            tile!.setCallback(MenuCard.ON_CARD_CLICK,#this!,"onMenuItemClick")
            tile!.setLetterColor(str(#colors!.get(MOD(tile!.getID(),#colors!.size()))))
            tile!.setCallback(MenuCard.ON_FAVORITES_ADD,#this!,"setFavorite")
            
            if #favoritesProvider!.isItemFavorite(item!) then
                    tile!.toggleFavorite()
            fi
            
            if item!.getIcon() <> "" AND item!.getIcon() <> null() then              
                tile!.setIcon(item!.getIcon())
            endif
            #MenuItemTiles!.put(item!.getNodeId(),tile!)
                    
        wend  
        
        it! = headers!.iterator()
        while it!.hasNext()
            item! = cast(MenuItem,it!.next())
            id%  = item!.getNodeId()
            
            
            header! = #MenuTilesBox!.addStaticText(#MenuTilesBox!.getAvailableControlID(),0,0,0,0,item!.getCaption())
            header!.addStyle("header")
            subChildren! = item!.getChildren()
            iterator! = subChildren!.iterator()
            while iterator!.hasNext()
                item! = cast(MenuItem,iterator!.next())
                id%  = item!.getNodeId()
                tile! = new MenuCard(#MenuTilesBox!, id%)
                tile!.setMenuItem(item!)
                tile!.setCallback(MenuCard.ON_FAVORITES_ADD,#this!,"setFavorite")
                tile!.setCallback(MenuCard.ON_CARD_CLICK,#this!,"onMenuItemClick")
                tile!.setLetterColor(str(#colors!.get(MOD(tile!.getID(),#colors!.size()))))
                
                if #favoritesProvider!.isItemFavorite(item!) then
                    tile!.toggleFavorite()
                fi
                
                if item!.getIcon() <> "" AND item!.getIcon() <> null() then             
                    tile!.setIcon(item!.getIcon())
                endif
                #MenuItemTiles!.put(item!.getNodeId(),tile!)
            wend
        wend
        
     
    methodend
    
    
    rem @override
    method public void onMenuItemClick(BBjCustomEvent ev!)
        
        nodeId=num(str(ev!.getObject()))
        item!=#Menu!.getItem(nodeId)
        if item!.hasChildren() then
            #setParentNode(nodeId)
        else
            #fireEvent(BBjAPI.ON_BUTTON_PUSH,ev!.getObject())
        fi
    methodend   
    
    
classend