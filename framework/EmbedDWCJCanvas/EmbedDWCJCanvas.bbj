use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::WebKit/model/Menu.bbj::MenuItem
use ::WebKit/util/DynamicLoader.bbj::DynamicLoader
use ::WebKit/util/Util.bbj::Util

use java.util.HashMap

class public EmbedDWCJCanvas extends BBjWidget
    field private BBjHtmlView HtmlView!
    field private MenuItem MenuItem!
    field private String baseUri!
    
    
    method public EmbedDWCJCanvas(BBjWindow wnd!)
        DynamicLoader.addLocalCSS("WebKit/framework/EmbedPanel/EmbedPanel.css")
        #super!.create(wnd!,wnd!.getAvailableControlID())
    methodend

    method public EmbedDWCJCanvas(BBjWindow wnd!, BBjInt id!)
        DynamicLoader.addLocalCSS("WebKit/framework/EmbedPanel/EmbedPanel.css")
        #super!.create(wnd!,id!)
    methodend

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        
        declare BBjChildWindow canvas!
        
        
        if f_init!>0 then
        
            tmp$ = BBjAPI().getSysGui().executeScript("window.location.href")
            #baseUri!=tmp$(1,pos("/"=tmp$,1,3))
        
            canvas! = #getCanvas()    

        FI
        
    methodend
    
    method public BBjChildWindow getCanvas()
        methodret #super!.getCanvas()
    methodend
    
        
classend

