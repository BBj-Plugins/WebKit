use java.util.HashMap
use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::WebKit/model/Menu.bbj::Menu


class public MenuItem

    field private BBjNumber NodeId
    field private BBjString Caption!
    field private BBjString IconFileName!
    field private BBjString ToolTip!
    field private MenuItem  Parent!
    field private BBjVector Children! = new BBjVector()
    
    field private BBjString path!
    field private BBjString menuItemPathCaption!
    field private BBjString parameter$

    field private BBjNumber StartType
    field private BBjString Program$
    field private BBjString Callback$

    method private MenuItem()
    methodend

    method public MenuItem(MenuItem parentItem!, BBjNumber nodeId, BBjString pathCaption! ,BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
        #NodeId = nodeId
        #Caption! = caption!
        #ToolTip! = toolTip!
        #IconFileName! = iconFilename!
        #Parent! = parentItem!
        if #Parent! <> null() then
            #Parent!.addChild(#this!)
        fi
        #menuItemPathCaption! = pathCaption!
        #path! = #buildPath()
    methodend

    method public MenuItem(MenuItem parentItem!, BBjNumber nodeId, BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
         #this!(parentItem!, nodeId, caption! ,caption!, toolTip!, iconFilename!)
    methodend

    method private String buildPath()
        declare StringBuilder pathBuilder!
        declare MenuItem item!

        if #getParent() = null() then
            methodret "/"
        fi

        pathBuilder! = new StringBuilder()
 
        pathBuilder!.append(#menuItemPathCaption!)
        item! = #getParent()
        while item! <> null()
            pathBuilder!.insert(0, "/") 
            if item!.getParent() <> null() then
                pathBuilder!.insert(0, item!.getMenuItemPathCaption())
            fi
            item! = item!.getParent()
        wend
        path! = pathBuilder!.toString()
        encodePath! = ClientUtil.encodeURI(path!)
        methodret encodePath!

    methodend 

    method public BBjNumber getNodeId()
        methodret #NodeId
    methodend

    method public BBjString getCaption()
        methodret #Caption!
    methodend

    method public BBjString getToolTip()
        methodret #ToolTip!
    methodend

    method public BBjString getIcon()
        methodret #IconFileName!
    methodend

    method public BBjImage getImage()

        if #IconFileName! <> null() and #IconFileName! <> "" then
            img! = BBjAPI().getSysGui().getImageManager().loadImageFromFile(#IconFileName!,err=*next)
        fi
        methodret img!

    methodend

    method public MenuItem getParent()
        methodret #Parent!
    methodend

    method public Boolean hasChildren()
        methodret #Children!.size()>0
    methodend

    method public BBjVector getChildren()
        methodret #Children!
    methodend

    method public void addChild(MenuItem item!)
        #Children!.addItem(item!)
    methodend
    
    method public void setStartType(BBjNumber startType)
        #StartType= startType
    methodend
    
    method public void setProgram(BBjString program$)
        #Program$ = program$
    methodend
    
    method public Boolean hasProgram()
        methodret #Program$ <> ""
    methodend
    
    method public BBjNumber getStartType()
        methodret #StartType
    methodend
    
    method public BBjString getProgram()
        methodret #Program$
    methodend

    method public BBjString getPath()
        methodret #path!
    methodend 

    method public BBjString getMenuItemPathCaption()
        methodret #menuItemPathCaption!
    methodend

    rem /**
    rem This method only changes the path-name for this Menuitem.
    rem Do not give in a full path if this is a Sub-Menuitem.
    rem If this Menuitem has children it will build a new path with the new name and register it-self in the menu.
    rem  */
    method public void setMenuItemPathCaption(BBjString pathCaption!)
        oldPath$ = #path!
        #menuItemPathCaption! = pathCaption!
        #path! = #buildPath()
        Menu.updateMenuIndex(oldPath$, #this!)
    methodend

    method public void setPath(BBjString path$)
        oldPath$ = #path!
        #path! = ClientUtil.encodeURI(path$)
        Menu.updateMenuIndex(oldPath$, #this!)
    methodend

    method public void setCallback(BBjString callback$)
        #Callback$ = callback$
    methodend

    method public BBjString getCallback()
        methodret #Callback$
    methodend
    
    method public void removeChild(MenuItem item!)
        #Children!.remove(item!)
    methodend
    
    method public MenuItem getChild(String caption!)
        for i = 0 to #Children!.size() - 1
            if cast (MenuItem,#Children!.get(i)).getCaption() = caption!
                methodret cast (MenuItem,#Children!.get(i))
            endif
        next i
        methodret null()
    methodend

    method public void setParameter(BBjString parameter$)
        oldpath$ = str(#path!)
        #parameter$ = parameter$
        #path! = #path! + parameter$
        Menu.updateMenuIndex(oldpath$, #this!)
    methodend

    method public BBjString getParameter() 
        methodret #parameter$
    methodend
classend
