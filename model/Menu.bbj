use ::WebKit/util/ClientUtil.bbj::ClientUtil
use ::WebKit/model/MenuItem.bbj::MenuItem

use java.util.HashMap

class public Menu
    field private static HashMap menuIndex! = new HashMap()
    field private HashMap menuMap! = new HashMap()
    field private MenuItem RootItem!
    field private BBjNumber highestNodeId = 99
    field public MenuItem favorites!
    

    method public Menu()
        #RootItem! = new MenuItem(null(),0, "root", "","")
        #favorites! = new MenuItem(null(),1, "Favorites","","")
    methodend

    method public MenuItem addMenuItem(MenuItem parentItem!, BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
        methodret #addMenuItem( parentItem!, #highestNodeId+1,  caption!,  toolTip!,  iconFilename!)
    methodend

    method public MenuItem addMenuItem(MenuItem parentItem!, BBjString pathCaption! ,BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
        methodret #addMenuItem( parentItem!, #highestNodeId+1, pathCaption!,  caption!,  toolTip!,  iconFilename!)
    methodend

    method public MenuItem addMenuItem(MenuItem parentItem!, BBjNumber nodeId, BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
        methodret #addMenuItem(parentItem!, nodeId, caption!, caption!, toolTip!, iconFilename!)
    methodend

    method public MenuItem addMenuItem(MenuItem parentItem!, BBjNumber nodeId, BBjString pathCaption!, BBjString caption!, BBjString toolTip!, BBjString iconFilename!)
        item! = new MenuItem(parentItem!, nodeId, pathCaption!, caption!, toolTip!, iconFilename!)
        #highestNodeId = max(#highestNodeId,nodeId)
        #menuMap!.put(nodeID,item!)
        #menuIndex!.put(item!.getPath(), item!)
        methodret item!
    methodend

    method public MenuItem getRoot()
        methodret #RootItem!
    methodend
    
    method public BBjVector getChildren(MenuItem item!)
        if item! = null() then
            methodret #RootItem!.getChildren()
        else
            methodret item!.getChildren()
        fi
    methodend
    
    method public MenuItem getItem(BBjNumber nodeId)
        methodret cast(MenuItem,#menuMap!.get(nodeId))
    methodend
    
    method public MenuItem getItem(String path!)
        it! = #menuMap!.keySet().iterator()
        while it!.hasNext()
            item! = #menuMap!.get(it!.next())
            if item!.getPath().toLowerCase().equals(path!.toLowerCase()) then
                methodret item!
            fi
        wend
        methodret null()
    methodend
    
    method public void removeItem(MenuItem item!)
        declare MenuItem parent!
        parent! = item!.getParent()
        parent!.removeChild(item!)
        #menuMap!.remove(item!)
        #menuIndex!.remove(item!)
    methodend
    
    method public static HashMap getMenuMap()
        methodret #menuMap!
    methodend
    
    method public static void addItemToIndex(MenuItem item!)
        #menuIndex!.put(item!.getPath().toLowerCase(), item!)
    methodend
    
    method public static void updateMenuIndex(BBjString oldKey$, MenuItem item!)
        if #menuIndex!.containsKey(oldkey$) then
           #menuIndex!.remove(oldKey$)
        fi
        #menuIndex!.put(item!.getPath(), item!)
    methodend
    
    method public static HashMap getMenuIndex()
        methodret #menuIndex!
    methodend
    
    method public MenuItem getItemByPath(String path!)
       methodret cast(MenuItem, #menuIndex!.get(path!))
    methodend

classend
